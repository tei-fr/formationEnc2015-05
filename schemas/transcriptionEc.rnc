default namespace = "http://www.tei-c.org/ns/1.0"
namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"
namespace ns1 = "http://www.isocat.org/ns/dcr"
namespace rng = "http://relaxng.org/ns/structure/1.0"
namespace s = "http://www.ascc.net/xml/schematron"
namespace sch = "http://purl.oclc.org/dsdl/schematron"
namespace xlink = "http://www.w3.org/1999/xlink"

# Schema generated from ODD source 2015-05-27T11:07:38Z. .
# TEI Edition: Version 2.8.0. Last updated on
#	6th April 2015, revision 13197
# TEI Edition Location: http://www.tei-c.org/Vault/P5/Version 2.8.0/
#

# This template file is freely available and you are hereby authorised to copy, modify, and redistribute it in any way without further reference or permissions.When making such modifications, you are strongly recommended to change the present text to include an accurate statement of the licencing conditions applicable to your modified text.
macro.paraContent =
  (text | model.gLike | model.phrase | model.inter | model.global)*
macro.limitedContent = (text | model.limitedPhrase | model.inter)*
macro.phraseSeq = (text | model.gLike | model.phrase | model.global)*
macro.phraseSeq.limited = (text | model.limitedPhrase | model.global)*
macro.specialPara =
  (text
   | model.gLike
   | model.phrase
   | model.inter
   | model.divPart
   | model.global)*
macro.xtext = (text | model.gLike)*
data.certainty = "high" | "medium" | "low" | "unknown"
data.probability = xsd:double { minInclusive = "0" maxInclusive = "1" }
data.numeric =
  xsd:double
  | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
  | xsd:decimal
data.interval =
  xsd:float { minExclusive = "0" }
  | "regular"
  | "irregular"
  | "unknown"
data.count = xsd:nonNegativeInteger
data.temporal.w3c =
  xsd:date
  | xsd:gYear
  | xsd:gMonth
  | xsd:gDay
  | xsd:gYearMonth
  | xsd:gMonthDay
  | xsd:time
  | xsd:dateTime
data.truthValue = xsd:boolean
data.xTruthValue = xsd:boolean | "unknown" | "inapplicable"
data.language = xsd:language | ""
data.point =
  xsd:token { pattern = "(\-?[0-9]+\.?[0-9]*,\-?[0-9]+\.?[0-9]*)" }
data.pointer = xsd:anyURI
data.version = xsd:token { pattern = "[\d]+(\.[\d]+){0,2}" }
data.word = xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
data.sex = data.word
data.text = xsd:string
data.name = xsd:Name
data.enumerated = data.word
data.temporal.iso =
  xsd:date
  | xsd:gYear
  | xsd:gMonth
  | xsd:gDay
  | xsd:gYearMonth
  | xsd:gMonthDay
  | xsd:time
  | xsd:dateTime
  | xsd:token { pattern = "[0-9.,DHMPRSTWYZ/:+\-]+" }
att.canonical.attributes =
  att.canonical.attribute.key, att.canonical.attribute.ref
att.canonical.attribute.key =
  
  ## fournit un moyen, défini de façon externe, d'identifier l'entité (ou les entités) nommé(es), en utilisant une valeur codée d'un certain type.
  attribute key { data.text }?
att.canonical.attribute.ref =
  
  ## (référence) fournit un moyen explicite de localiser une définition complète de l'entité nommée au moyen d'un ou plusieurs URIs.
  attribute ref {
    list { data.pointer+ }
  }?
att.ranging.attributes =
  att.ranging.attribute.atLeast,
  att.ranging.attribute.atMost,
  att.ranging.attribute.min,
  att.ranging.attribute.max,
  att.ranging.attribute.confidence
att.ranging.attribute.atLeast =
  
  ## donne une estimation de la valeur minimum pour la mesure.
  attribute atLeast { data.numeric }?
att.ranging.attribute.atMost =
  
  ## donne une estimation de la valeur maximum pour la mesure.
  attribute atMost { data.numeric }?
att.ranging.attribute.min =
  
  ## lorsque la mesure résume plus d'une observation, fournit la valeur minimum observée.
  attribute min { data.numeric }?
att.ranging.attribute.max =
  
  ## lorsque la mesure résume plus d'une observation, fournit la valeur maximum observée.
  attribute max { data.numeric }?
att.ranging.attribute.confidence =
  
  ## specifies the degree of statistical confidence (between zero and one) that a value falls within the range specified by min and max, or the proportion of observed values that fall within that range.
  attribute confidence { data.probability }?
att.dimensions.attributes =
  att.ranging.attributes,
  att.dimensions.attribute.unit,
  att.dimensions.attribute.quantity,
  att.dimensions.attribute.extent,
  att.dimensions.attribute.precision,
  att.dimensions.attribute.scope
att.dimensions.attribute.unit =
  
  ## noms des unités utilisées pour la mesure.
  ## Les valeurs suggérées comprennent: 1] cm(centimetres) ; 2] mm(millimetres) ; 3] in(inches) ; 4] lines; 5] chars(characters) 
  attribute unit {
    
    ## (centimètres) 
    "cm"
    | 
      ## (millimètres) 
      "mm"
    | 
      ## (pouces) 
      "in"
    | 
      ## lignes de texte
      "lines"
    | 
      ## (characters) caractères du texte
      "chars"
    | xsd:Name
  }?
att.dimensions.attribute.quantity =
  
  ## spécifie la longueur dans les unités indiquées
  attribute quantity { data.numeric }?
att.dimensions.attribute.extent =
  
  ## indique la dimension de l'objet en utilisant un vocabulaire spécifique à un projet qui combine la quantité et l'unité dans une chaîne seule de mots.
  attribute extent { data.text }?
att.dimensions.attribute.precision =
  
  ## caractérise la précision des valeurs spécifiées par les autres attributs.
  attribute precision { data.certainty }?
att.dimensions.attribute.scope =
  
  ## spécifie l'applicabilité de cette mesure, là où plus d'un objet est mesuré.
  ## Exemple de valeurs possibles: 1] all; 2] most; 3] range
  attribute scope { data.enumerated }?
att.damaged.attributes =
  att.dimensions.attributes,
  att.damaged.attribute.hand,
  att.damaged.attribute.agent,
  att.damaged.attribute.degree,
  att.damaged.attribute.group
att.damaged.attribute.hand =
  
  ## dans le cas de dommages (effacement volontaire, etc.) attribuable à une main identifiable, identifie cette main.
  attribute hand { data.pointer }?
att.damaged.attribute.agent =
  
  ## caractérise la raison des dommages, lorsqu'elle peut être identifiée
  ## Exemple de valeurs possibles: 1] rubbing; 2] mildew; 3] smoke
  attribute agent { data.enumerated }?
att.damaged.attribute.degree =
  
  ## indique le degré (la gravité) du dommage subi, selon une grille appropriée. L'attribut degree doit être utilisé dans le seul cas où le texte peut être lu avec certitude ; le texte restitué en utilisant d'autres sources doit être encodé au moyen de l'élément supplied.
  attribute degree { data.probability | data.certainty }?
att.damaged.attribute.group =
  
  ## permet d'assigner un numéro quelconque à chaque fragment endommagé considéré comme faisant partie d'un ensemble résultant du même phénomène physique
  attribute group { data.count }?
att.datable.w3c.attributes =
  att.datable.w3c.attribute.when,
  att.datable.w3c.attribute.notBefore,
  att.datable.w3c.attribute.notAfter,
  att.datable.w3c.attribute.from,
  att.datable.w3c.attribute.to
att.datable.w3c.attribute.when =
  
  ## spécifie une date exacte pour un événement sous une forme normalisée, par ex. aaaa-mm-jj.
  attribute when { data.temporal.w3c }?
att.datable.w3c.attribute.notBefore =
  
  ## spécifie la date la plus ancienne pour l'événement sous une forme normalisée, par ex. aaaa-mm-jj
  attribute notBefore { data.temporal.w3c }?
att.datable.w3c.attribute.notAfter =
  
  ## spécifie la date la plus récente possible pour l'événement sous une forme normalisée, par ex. aaaa-mm-jj
  attribute notAfter { data.temporal.w3c }?
att.datable.w3c.attribute.from =
  
  ## indique le point de départ d'une période sous une forme normalisée, par ex. aaaa-mm-jj
  attribute from { data.temporal.w3c }?
att.datable.w3c.attribute.to =
  
  ## indique le terme de la période sous une forme normalisée, par ex. aaaa-mm-jj
  attribute to { data.temporal.w3c }?
att.datable.attributes =
  att.datable.w3c.attributes,
  att.datable.iso.attributes,
  att.datable.custom.attributes,
  att.datable.attribute.calendar,
  att.datable.attribute.period
att.datable.attribute.calendar =
  
  ## indique le système ou le calendrier auquel appartient la date exprimée dans le contenu de l'élément.
  attribute calendar { data.pointer }?
sch:pattern [
  id = "tei_bare-att.datable-calendar-calendar-constraint-1"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@calendar]"
    "\x{a}" ~
    "            "
    sch:assert [
      test = "string-length(.) gt 0"
      "\x{a}" ~
      "@calendar indicates the system or calendar to which the date represented by the content of this element\x{a}" ~
      "belongs, but this "
      sch:name [ ]
      " element has no textual content."
    ]
    "\x{a}" ~
    "          "
  ]
  "\x{a}" ~
  "   "
]
att.datable.attribute.period =
  
  ## fournit un pointeur vers un emplacement donné définissant une période de temps nommée durant laquelle l'item concerné s'inscrit.
  attribute period { data.pointer }?
att.datcat.attributes =
  att.datcat.attribute.datcat, att.datcat.attribute.valueDatcat
att.datcat.attribute.datcat =
  
  ## contains a PID (persistent identifier) that aligns the given element with the appropriate Data Category (or categories) in ISOcat.
  attribute ns1:datcat {
    list { data.pointer+ }
  }?
att.datcat.attribute.valueDatcat =
  
  ## contains a PID (persistent identifier) that aligns the content of the given element or the value of the given attribute with the appropriate simple Data Category (or categories) in ISOcat.
  attribute ns1:valueDatcat {
    list { data.pointer+ }
  }?
att.declarable.attributes = att.declarable.attribute.default
att.declarable.attribute.default =
  
  ## Indique si oui ou non cet élément est affecté par défaut quand son élément parent a été sélectionné.
  [ a:defaultValue = "false" ]
  attribute default {
    
    ## cet élément est choisi si son parent est choisi
    "true"
    | 
      ## cet élément ne peut être sélectionné qu'explicitement, à moins qu'il ne soit le seul de ce type, auquel cas il est sélectionné si son parent a été choisi
      "false"
  }?
att.divLike.attributes = empty
att.global.responsibility.attributes =
  att.global.responsibility.attribute.cert,
  att.global.responsibility.attribute.resp
att.global.responsibility.attribute.cert =
  
  ## (certitude) donne le degré de certitude associée à l'intervention ou à l'interprétation.
  attribute cert { data.certainty }?
att.global.responsibility.attribute.resp =
  
  ## (responsable) indique l'agent responsable de l'intervention ou de l'interprétation, par exemple un éditeur ou un transcripteur.
  attribute resp {
    list { data.pointer+ }
  }?
att.editLike.attributes =
  att.dimensions.attributes,
  att.source.attributes,
  att.editLike.attribute.evidence,
  att.editLike.attribute.instant
att.editLike.attribute.evidence =
  
  ## indique la nature de la preuve attestant la fiabilité ou la justesse de l'intervention ou de l'interprétation.
  ## Les valeurs suggérées comprennent: 1] internal; 2] external; 3] conjecture
  attribute evidence {
    list {
      (
       ## l'intervention est justifiée par une preuve interne
       "internal"
       | 
         ## l'intervention est justifiée par une preuve externe
         "external"
       | 
         ## l'intervention ou l'interprétation a été faite par le rédacteur, le catalogueur, ou le chercheur sur la base de leur expertise.
         "conjecture"
       | xsd:Name)+
    }
  }?
att.editLike.attribute.instant =
  
  ## indicates whether this is an instant revision or not.
  [ a:defaultValue = "false" ] attribute instant { data.xTruthValue }?
att.global.rendition.attributes =
  att.global.rendition.attribute.rend,
  att.global.rendition.attribute.style,
  att.global.rendition.attribute.rendition
att.global.rendition.attribute.rend =
  
  ## (interprétation) indique comment l'élément en question a été rendu ou présenté dans le texte source
  attribute rend {
    list { data.word+ }
  }?
att.global.rendition.attribute.style =
  
  ## contains an expression in some formal style definition language which defines the rendering or presentation used for this element in the source text
  attribute style { data.text }?
att.global.rendition.attribute.rendition =
  
  ## pointe vers une description du rendu ou de la présentation utilisés pour cet élément dans le texte source
  attribute rendition {
    list { data.pointer+ }
  }?
att.global.attributes =
  att.global.rendition.attributes,
  att.global.linking.attributes,
  att.global.facs.attributes,
  att.global.change.attributes,
  att.global.responsibility.attributes,
  att.global.attribute.xmlid,
  att.global.attribute.n,
  att.global.attribute.xmllang
att.global.attribute.rend =
  
  ##
  attribute rend { text }?
att.global.attribute.xmlid =
  
  ## (identifiant) fournit un identifiant unique pour l'élément qui porte l'attribut
  attribute xml:id { xsd:ID }?
att.global.attribute.n =
  
  ## (nombre) donne un nombre (ou une autre étiquette) pour un élément, qui n'est pas nécessairement unique dans le document TEI.
  attribute n { data.text }?
att.global.attribute.xmllang =
  
  ## (langue) indique la langue du contenu de l'élément en utilisant les codes du RFC 3066
  attribute xml:lang { data.language }?
att.handFeatures.attributes =
  att.handFeatures.attribute.scribe,
  att.handFeatures.attribute.scribeRef,
  att.handFeatures.attribute.script,
  att.handFeatures.attribute.scriptRef,
  att.handFeatures.attribute.medium,
  att.handFeatures.attribute.scope
att.handFeatures.attribute.scribe =
  
  ## donne un nom normalisé ou un autre identifiant pour le scribe reconnu comme responsable de cette main.
  attribute scribe { data.name }?
att.handFeatures.attribute.scribeRef =
  
  ## points to a full description of the scribe concerned, typically supplied by a person element elsewhere in the description.
  attribute scribeRef {
    list { data.pointer+ }
  }?
att.handFeatures.attribute.script =
  
  ## caractérise la calligraphie ou le style d'écriture particuliers utilisés par cette main, par exemple écriture anglaise, de chancellerie, italienne, etc.
  attribute script {
    list { data.name+ }
  }?
att.handFeatures.attribute.scriptRef =
  
  ## points to a full description of the script or writing style used by this hand, typically supplied by a scriptNote element elsewhere in the description.
  attribute scriptRef {
    list { data.pointer+ }
  }?
att.handFeatures.attribute.medium =
  
  ## décrit la teinte ou le type d'encre, par exemple brune, ou un autre outil d'écriture, par exemple un crayon.
  attribute medium {
    list { data.enumerated+ }
  }?
att.handFeatures.attribute.scope =
  
  ## Spécifie la fréquence d'apparition de cette main dans le manuscrit.
  attribute scope {
    
    ## il n'y a que cette main dans le manuscrit.
    "sole"
    | 
      ## cette main est utilisée dans la majeure partie du manuscrit.
      "major"
    | 
      ## cette main est utilisée occasionnellement dans le manuscrit.
      "minor"
  }?
att.naming.attributes =
  att.canonical.attributes,
  att.naming.attribute.role,
  att.naming.attribute.nymRef
att.naming.attribute.role =
  
  ## may be used to specify further information about the entity referenced by this name in the form of a set of whitespace-separated values, for example the occupation of a person, or the status of a place.
  attribute role {
    list { data.enumerated+ }
  }?
att.naming.attribute.nymRef =
  
  ## (référence au nom canonique) indique comment localiser la forme canonique (nym) des noms qui sont associés à l'objet nommé par l'élément qui le contient.
  attribute nymRef {
    list { data.pointer+ }
  }?
att.placement.attributes = att.placement.attribute.place
att.placement.attribute.place =
  
  ## specifie où cet item se trouve
  ## Les valeurs suggérées comprennent: 1] below; 2] bottom; 3] margin; 4] top; 5] opposite; 6] overleaf; 7] above; 8] end; 9] inline; 10] inspace
  attribute place {
    list {
      (
       ## au-dessous de la ligne
       "below"
       | 
         ## dans la marge inférieure
         "bottom"
       | 
         ## dans la marge (gauche, droite ou les deux en même temps)
         "margin"
       | 
         ## dans la marge supérieure
         "top"
       | 
         ## sur la page opposée
         "opposite"
       | 
         ## de l'autre côté de la feuille
         "overleaf"
       | 
         ## au-dessus de la ligne
         "above"
       | 
         ## à la fin, par exemple d'un chapitre ou d'un volume
         "end"
       | 
         ## dans le corps du texte
         "inline"
       | 
         ## dans un espace prédéfini, par exemple à gauche d'un scripteur précédent
         "inspace"
       | xsd:Name)+
    }
  }?
att.typed.attributes =
  att.typed.attribute.type, att.typed.attribute.subtype
att.typed.attribute.type =
  
  ## caractérise l'élément en utilisant n'importe quel système ou typologie de classification approprié.
  attribute type { data.enumerated }?
att.typed.attribute.subtype =
  
  ## (sous-type) fournit une sous-catégorisation de l'élément, si c'est nécessaire.
  attribute subtype { data.enumerated }?
sch:pattern [
  id = "tei_bare-att.typed-subtypeTyped-constraint-2"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "*[@subtype]"
    "\x{a}" ~
    "        "
    sch:assert [
      test = "@type"
      "The "
      sch:name [ ]
      " element should not be categorized in detail with @subtype\x{a}" ~
      " unless also categorized in general with @type"
    ]
    "\x{a}" ~
    "      "
  ]
  "\x{a}" ~
  "   "
]
att.pointing.attributes =
  att.pointing.attribute.targetLang,
  att.pointing.attribute.target,
  att.pointing.attribute.evaluate
att.pointing.attribute.targetLang =
  
  ## specifies the language of the content to be found at the destination referenced by target, using a language tag generated according to BCP 47.
  attribute targetLang { data.language }?
sch:pattern [
  id = "tei_bare-att.pointing-targetLang-targetLang-constraint-3"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[not(self::tei:schemaSpec)][@targetLang]"
    "\x{a}" ~
    "            "
    sch:assert [
      test = "count(@target)"
      "@targetLang can only be used if @target is specified."
    ]
    "\x{a}" ~
    "          "
  ]
  "\x{a}" ~
  "   "
]
att.pointing.attribute.target =
  
  ## précise la cible de la référence en donnant une ou plusieurs références URI
  attribute target {
    list { data.pointer+ }
  }?
att.pointing.attribute.evaluate =
  
  ## (évalué) détermine le sens attendu, si la cible d'un pointeur est elle-même un pointeur.
  attribute evaluate {
    
    ## si l'élément pointé est lui-même un pointeur, alors on prendra la cible de ce pointeur, et ainsi de suite jusqu'à trouver un élément qui n'est pas un pointeur.
    "all"
    | 
      ## si l'élément pointé est lui-même un pointeur, alors sa cible (qui est ou non un pointeur) devient la cible retenue.
      "one"
    | 
      ## aucune évaluation ultérieure des cibles n'est menée au-delà de la recherche de l'élément désigné dans la cible du pointeur.
      "none"
  }?
att.pointing.group.attributes =
  att.pointing.attributes,
  att.typed.attributes,
  att.pointing.group.attribute.domains,
  att.pointing.group.attribute.targFunc
att.pointing.group.attribute.domains =
  
  ## spécifie, facultativement, les identifiants des éléments englobant tous les éléments indiqués par le contenu de cet élément.
  attribute domains {
    list { data.pointer, data.pointer, data.pointer* }
  }?
att.pointing.group.attribute.targFunc =
  
  ## (fonction cible) décrit la fonction de chacune des valeurs de l'attribut target pour les balises incluses link, join, ou alt.
  attribute targFunc {
    list { data.word, data.word, data.word* }
  }?
att.segLike.attributes =
  att.datcat.attributes, att.segLike.attribute.function
att.segLike.attribute.function =
  
  ## (fonction) caractérise la fonction du segment.
  attribute function { data.enumerated }?
att.sortable.attributes = att.sortable.attribute.sortKey
att.sortable.attribute.sortKey =
  
  ## supplies the sort key for this element in an index, list or group which contains it.
  attribute sortKey { data.word }?
att.spanning.attributes = att.spanning.attribute.spanTo
att.spanning.attribute.spanTo =
  
  ## indique la fin d'un passage introduit par l'élément portant cet attribut.
  attribute spanTo { data.pointer }?
sch:pattern [
  id = "tei_bare-att.spanning-spanTo-spanTo-2-constraint-4"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@spanTo]"
    "\x{a}" ~
    "            "
    sch:assert [
      test =
        "id(substring(@spanTo,2)) and following::*[@xml:id=substring(current()/@spanTo,2)]"
      "\x{a}" ~
      "The element indicated by @spanTo ("
      sch:value-of [ select = "@spanTo" ]
      ") must follow the current element "
      sch:name [ ]
      "\x{a}" ~
      "                  "
    ]
    "\x{a}" ~
    "          "
  ]
  "\x{a}" ~
  "   "
]
att.transcriptional.attributes =
  att.editLike.attributes,
  att.transcriptional.attribute.hand,
  att.transcriptional.attribute.status,
  att.transcriptional.attribute.cause,
  att.transcriptional.attribute.seq
att.transcriptional.attribute.hand =
  
  ## signale la main de celui qui est intervenue.
  attribute hand { data.pointer }?
att.transcriptional.attribute.status =
  
  ## indique la conséquence de l'intervention, par exemple dans le cas d'un effacement, une biffure, qui inclut trop ou pas assez de texte, ou dans le cas d'un ajout, une insertion, qui reproduit une portion du texte déjà présent.
  ## Exemple de valeurs possibles: 1] duplicate; 2] duplicate-partial; 3] excessStart; 4] excessEnd; 5] shortStart; 6] shortEnd; 7] partial; 8] unremarkable
  [ a:defaultValue = "unremarkable" ]
  attribute status { data.enumerated }?
att.transcriptional.attribute.cause =
  
  ## documents the presumed cause for the intervention.
  attribute cause {
    
    ## repeated for the purpose of fixation
    "fix"
    | 
      ## repeated to clarify a previously illegible or badly written text or mark
      "unclear"
  }?
att.transcriptional.attribute.seq =
  
  ## (séquence) assigne un numéro séquentiel relatif à l'ordre dans lequel les traits encodés portant cet attribut sont supposés être apparus.
  attribute seq { data.count }?
model.nameLike.agent = orgName | persName
model.nameLike.agent_alternation = orgName | persName
model.nameLike.agent_sequence = orgName, persName
model.nameLike.agent_sequenceOptional = orgName?, persName?
model.nameLike.agent_sequenceOptionalRepeatable = orgName*, persName*
model.nameLike.agent_sequenceRepeatable = orgName+, persName+
model.segLike = seg
model.hiLike = notAllowed
model.hiLike_alternation = notAllowed
model.hiLike_sequence = empty
model.hiLike_sequenceOptional = empty
model.hiLike_sequenceOptionalRepeatable = empty
model.hiLike_sequenceRepeatable = notAllowed
model.emphLike = title
model.emphLike_alternation = title
model.emphLike_sequence = title
model.emphLike_sequenceOptional = title?
model.emphLike_sequenceOptionalRepeatable = title*
model.emphLike_sequenceRepeatable = title+
model.highlighted = model.hiLike | model.emphLike
model.dateLike = notAllowed
model.dateLike_alternation = notAllowed
model.dateLike_sequence = empty
model.dateLike_sequenceOptional = empty
model.dateLike_sequenceOptionalRepeatable = empty
model.dateLike_sequenceRepeatable = notAllowed
model.dimLike = height | depth | width
model.measureLike = dim | height | depth | width | geo
model.measureLike_alternation = dim | height | depth | width | geo
model.measureLike_sequence = dim, height, depth, width, geo
model.measureLike_sequenceOptional = dim?, height?, depth?, width?, geo?
model.measureLike_sequenceOptionalRepeatable =
  dim*, height*, depth*, width*, geo*
model.measureLike_sequenceRepeatable =
  dim+, height+, depth+, width+, geo+
model.egLike = notAllowed
model.egLike_alternation = notAllowed
model.egLike_sequence = empty
model.egLike_sequenceOptional = empty
model.egLike_sequenceOptionalRepeatable = empty
model.egLike_sequenceRepeatable = notAllowed
model.graphicLike = notAllowed
model.offsetLike = offset | geogFeat
model.offsetLike_alternation = offset | geogFeat
model.offsetLike_sequence = offset, geogFeat
model.offsetLike_sequenceOptional = offset?, geogFeat?
model.offsetLike_sequenceOptionalRepeatable = offset*, geogFeat*
model.offsetLike_sequenceRepeatable = offset+, geogFeat+
model.pPart.msdesc =
  catchwords
  | dimensions
  | heraldry
  | locus
  | locusGrp
  | material
  | objectType
  | origDate
  | origPlace
  | secFol
  | signatures
  | stamp
  | watermark
model.pPart.editorial = ex | am | subst
model.pPart.editorial_alternation = ex | am | subst
model.pPart.editorial_sequence = ex, am, subst
model.pPart.editorial_sequenceOptional = ex?, am?, subst?
model.pPart.editorial_sequenceOptionalRepeatable = ex*, am*, subst*
model.pPart.editorial_sequenceRepeatable = ex+, am+, subst+
model.pPart.transcriptional =
  app
  | damage
  | handShift
  | restore
  | supplied
  | surplus
  | mod
  | redo
  | retrace
  | undo
model.pPart.transcriptional_alternation =
  app
  | damage
  | handShift
  | restore
  | supplied
  | surplus
  | mod
  | redo
  | retrace
  | undo
model.pPart.transcriptional_sequence =
  app,
  damage,
  handShift,
  restore,
  supplied,
  surplus,
  mod,
  redo,
  retrace,
  undo
model.pPart.transcriptional_sequenceOptional =
  app?,
  damage?,
  handShift?,
  restore?,
  supplied?,
  surplus?,
  mod?,
  redo?,
  retrace?,
  undo?
model.pPart.transcriptional_sequenceOptionalRepeatable =
  app*,
  damage*,
  handShift*,
  restore*,
  supplied*,
  surplus*,
  mod*,
  redo*,
  retrace*,
  undo*
model.pPart.transcriptional_sequenceRepeatable =
  app+,
  damage+,
  handShift+,
  restore+,
  supplied+,
  surplus+,
  mod+,
  redo+,
  retrace+,
  undo+
model.pPart.edit = model.pPart.editorial | model.pPart.transcriptional
model.linePart =
  model.segLike
  | model.hiLike
  | model.pPart.transcriptional
  | zone
  | line
model.ptrLike = notAllowed
model.lPart = notAllowed
model.global.meta =
  link
  | linkGrp
  | timeline
  | join
  | joinGrp
  | alt
  | altGrp
  | substJoin
  | listTranspose
model.milestoneLike = anchor | fw
model.gLike = g
model.oddDecl = notAllowed
model.oddDecl_alternation = notAllowed
model.oddDecl_sequence = empty
model.oddDecl_sequenceOptional = empty
model.oddDecl_sequenceOptionalRepeatable = empty
model.oddDecl_sequenceRepeatable = notAllowed
model.phrase.xml = notAllowed
model.specDescLike = notAllowed
model.biblLike = msDesc
model.biblLike_alternation = msDesc
model.biblLike_sequence = msDesc
model.biblLike_sequenceOptional = msDesc?
model.biblLike_sequenceOptionalRepeatable = msDesc*
model.biblLike_sequenceRepeatable = msDesc+
model.headLike = head
model.headLike_alternation = head
model.headLike_sequence = head
model.headLike_sequenceOptional = head?
model.headLike_sequenceOptionalRepeatable = head*
model.headLike_sequenceRepeatable = head+
model.labelLike = label
model.labelLike_alternation = label
model.labelLike_sequence = label
model.labelLike_sequenceOptional = label?
model.labelLike_sequenceOptionalRepeatable = label*
model.labelLike_sequenceRepeatable = label+
model.listLike =
  \list
  | listOrg
  | listEvent
  | listPerson
  | listPlace
  | listNym
  | listApp
  | listWit
model.listLike_alternation =
  \list
  | listOrg
  | listEvent
  | listPerson
  | listPlace
  | listNym
  | listApp
  | listWit
model.listLike_sequence =
  \list,
  listOrg,
  listEvent,
  listPerson,
  listPlace,
  listNym,
  listApp,
  listWit
model.listLike_sequenceOptional =
  \list?,
  listOrg?,
  listEvent?,
  listPerson?,
  listPlace?,
  listNym?,
  listApp?,
  listWit?
model.listLike_sequenceOptionalRepeatable =
  \list*,
  listOrg*,
  listEvent*,
  listPerson*,
  listPlace*,
  listNym*,
  listApp*,
  listWit*
model.listLike_sequenceRepeatable =
  \list+,
  listOrg+,
  listEvent+,
  listPerson+,
  listPlace+,
  listNym+,
  listApp+,
  listWit+
model.noteLike = witDetail
model.lLike = notAllowed
model.lLike_alternation = notAllowed
model.lLike_sequence = empty
model.lLike_sequenceOptional = empty
model.lLike_sequenceOptionalRepeatable = empty
model.lLike_sequenceRepeatable = notAllowed
model.pLike = p | ab
model.pLike_alternation = p | ab
model.pLike_sequence = p, ab
model.pLike_sequenceOptional = p?, ab?
model.pLike_sequenceOptionalRepeatable = p*, ab*
model.pLike_sequenceRepeatable = p+, ab+
model.stageLike = notAllowed
model.stageLike_alternation = notAllowed
model.stageLike_sequence = empty
model.stageLike_sequenceOptional = empty
model.stageLike_sequenceOptionalRepeatable = empty
model.stageLike_sequenceRepeatable = notAllowed
model.entryPart = notAllowed
model.global.edit = addSpan | damageSpan | delSpan | space
model.divPart = model.lLike | model.pLike
model.persStateLike =
  persName
  | affiliation
  | age
  | education
  | faith
  | floruit
  | langKnowledge
  | nationality
  | occupation
  | residence
  | sex
  | socecStatus
  | state
  | trait
model.persEventLike = birth | death | event | listEvent
model.personLike = org | person | personGrp
model.personPart =
  model.biblLike | model.persStateLike | model.persEventLike
model.placeNamePart =
  placeName | bloc | country | region | district | settlement | geogName
model.placeNamePart_alternation =
  placeName | bloc | country | region | district | settlement | geogName
model.placeNamePart_sequence =
  placeName, bloc, country, region, district, settlement, geogName
model.placeNamePart_sequenceOptional =
  placeName?,
  bloc?,
  country?,
  region?,
  district?,
  settlement?,
  geogName?
model.placeNamePart_sequenceOptionalRepeatable =
  placeName*,
  bloc*,
  country*,
  region*,
  district*,
  settlement*,
  geogName*
model.placeNamePart_sequenceRepeatable =
  placeName+,
  bloc+,
  country+,
  region+,
  district+,
  settlement+,
  geogName+
model.placeStateLike =
  model.placeNamePart
  | climate
  | location
  | population
  | state
  | terrain
  | trait
model.placeStateLike_alternation =
  model.placeNamePart_alternation
  | climate
  | location
  | population
  | state
  | terrain
  | trait
model.placeStateLike_sequence =
  model.placeNamePart_sequence,
  climate,
  location,
  population,
  state,
  terrain,
  trait
model.placeStateLike_sequenceOptional =
  model.placeNamePart_sequenceOptional?,
  climate?,
  location?,
  population?,
  state?,
  terrain?,
  trait?
model.placeStateLike_sequenceOptionalRepeatable =
  model.placeNamePart_sequenceOptionalRepeatable*,
  climate*,
  location*,
  population*,
  state*,
  terrain*,
  trait*
model.placeStateLike_sequenceRepeatable =
  model.placeNamePart_sequenceRepeatable+,
  climate+,
  location+,
  population+,
  state+,
  terrain+,
  trait+
model.placeEventLike = event
model.orgPart = listOrg | listPerson | listPlace
model.publicationStmtPart.agency = notAllowed
model.publicationStmtPart.detail = notAllowed
model.certLike = notAllowed
model.descLike = notAllowed
model.glossLike = notAllowed
model.quoteLike = notAllowed
model.quoteLike_alternation = notAllowed
model.quoteLike_sequence = empty
model.quoteLike_sequenceOptional = empty
model.quoteLike_sequenceOptionalRepeatable = empty
model.quoteLike_sequenceRepeatable = notAllowed
model.qLike = model.quoteLike
model.qLike_alternation = model.quoteLike_alternation
model.qLike_sequence = model.quoteLike_sequence
model.qLike_sequenceOptional = model.quoteLike_sequenceOptional?
model.qLike_sequenceOptionalRepeatable =
  model.quoteLike_sequenceOptionalRepeatable*
model.qLike_sequenceRepeatable = model.quoteLike_sequenceRepeatable+
model.respLike = author
model.divWrapper = notAllowed
model.divTopPart = model.headLike
model.divTop = model.divWrapper | model.divTopPart
model.frontPart.drama = notAllowed
model.pLike.front = head
model.divBottomPart = notAllowed
model.divBottom = model.divWrapper | model.divBottomPart
model.titlepagePart = notAllowed
model.msQuoteLike =
  title | colophon | explicit | finalRubric | incipit | rubric
model.msItemPart =
  model.biblLike
  | model.quoteLike
  | model.respLike
  | model.msQuoteLike
  | filiation
  | msItem
  | msItemStruct
  | decoNote
model.physDescPart_sequenceOptional =
  objectDesc?,
  handDesc?,
  typeDesc?,
  scriptDesc?,
  musicNotation?,
  decoDesc?,
  additions?,
  bindingDesc?,
  sealDesc?,
  accMat?
model.addressLike = affiliation
model.addressLike_alternation = affiliation
model.addressLike_sequence = affiliation
model.addressLike_sequenceOptional = affiliation?
model.addressLike_sequenceOptionalRepeatable = affiliation*
model.addressLike_sequenceRepeatable = affiliation+
model.nameLike =
  model.nameLike.agent
  | model.offsetLike
  | model.placeStateLike
  | model.persNamePart
model.nameLike_alternation =
  model.nameLike.agent_alternation
  | model.offsetLike_alternation
  | model.placeStateLike_alternation
  | model.persNamePart_alternation
model.nameLike_sequence =
  model.nameLike.agent_sequence,
  model.offsetLike_sequence,
  model.placeStateLike_sequence,
  model.persNamePart_sequence
model.nameLike_sequenceOptional =
  model.nameLike.agent_sequenceOptional?,
  model.offsetLike_sequenceOptional?,
  model.placeStateLike_sequenceOptional?,
  model.persNamePart_sequenceOptional?
model.nameLike_sequenceOptionalRepeatable =
  model.nameLike.agent_sequenceOptionalRepeatable*,
  model.offsetLike_sequenceOptionalRepeatable*,
  model.placeStateLike_sequenceOptionalRepeatable*,
  model.persNamePart_sequenceOptionalRepeatable*
model.nameLike_sequenceRepeatable =
  model.nameLike.agent_sequenceRepeatable+,
  model.offsetLike_sequenceRepeatable+,
  model.placeStateLike_sequenceRepeatable+,
  model.persNamePart_sequenceRepeatable+
model.global =
  model.global.meta
  | model.milestoneLike
  | model.noteLike
  | model.global.edit
  | metamark
model.frontPart = model.frontPart.drama
model.pPart.data =
  model.dateLike
  | model.measureLike
  | model.addressLike
  | model.nameLike
model.inter =
  model.egLike
  | model.oddDecl
  | model.biblLike
  | model.labelLike
  | model.listLike
  | model.stageLike
  | model.qLike
model.common = model.divPart | model.inter
model.phrase =
  model.segLike
  | model.highlighted
  | model.graphicLike
  | model.pPart.msdesc
  | model.pPart.edit
  | model.ptrLike
  | model.lPart
  | model.phrase.xml
  | model.specDescLike
  | model.pPart.data
model.limitedPhrase =
  model.hiLike
  | model.emphLike
  | model.pPart.msdesc
  | model.pPart.editorial
  | model.ptrLike
  | model.phrase.xml
  | model.pPart.data
model.divLike = \div
model.divGenLike = notAllowed
model.div1Like = notAllowed
model.teiHeaderPart = notAllowed
model.sourceDescPart = notAllowed
att.source.attributes = att.source.attribute.source
att.source.attribute.source =
  
  ## provides a pointer to the bibliographical source from which a quotation or citation is drawn.
  attribute source {
    list { data.pointer+ }
  }?
model.resourceLike = facsimile | sourceDoc
att.personal.attributes =
  att.naming.attributes,
  att.personal.attribute.full,
  att.personal.attribute.sort
att.personal.attribute.full =
  
  ## indique si la composante du nom est donnée en intégralité, sous forme d'abréviation ou simplement d'initiale.
  [ a:defaultValue = "yes" ]
  attribute full {
    
    ## (complet) la composante du nom est orthographiée en intégralité.
    "yes"
    | 
      ## (abrégé) la composante du nom est donnée sous forme abrégée.
      "abb"
    | 
      ## (initiale) la composante du nom n'est indiquée que par sa lettre initiale.
      "init"
  }?
att.personal.attribute.sort =
  
  ## (ordre) précise dans quel ordre est placé la composante par rapport aux autres dans le nom d'une personne.
  attribute sort { data.count }?
model.placeLike = place
p =
  
  ## (paragraphe) marque les paragraphes dans un texte en prose. [3.1. Paragraphs 7.2.5. Speech Contents]
  element p { macro.paraContent, att.global.attributes, empty }
\list =
  
  ## (liste) contient une suite d'items ordonnés dans une liste. [3.7. Lists]
  element list {
    ((model.divTop | model.global)*,
     ((item, model.global*)+
      | (label, model.global*, item, model.global*)+),
     (model.divBottom, model.global*)*)
    >> sch:pattern [
         id = "tei_bare-list-gloss-list-must-have-labels-constraint-5"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:list[@type='gloss']"
           "\x{a}" ~
           "	              "
           sch:assert [
             test = "tei:label"
             'The content of a "gloss" list should include a sequence of one or more pairs of a label element followed by an item element'
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attributes,
    att.sortable.attributes,
    att.typed.attribute.subtype,
    
    ## describes the nature of the items in the list.
    ## Les valeurs suggérées comprennent: 1] gloss; 2] index; 3] instructions; 4] litany; 5] syllogism
    attribute type {
      
      ## chaque item de la liste commente un terme ou un concept qui est donné par un élément label précédant l'item de la liste.
      "gloss"
      | 
        ## each list item is an entry in an index such as the alphabetical topical index at the back of a print volume.
        "index"
      | 
        ## each list item is a step in a sequence of instructions, as in a recipe.
        "instructions"
      | 
        ## each list item is one of a sequence of petitions, supplications or invocations, typically in a religious ritual.
        "litany"
      | 
        ## each list item is part of an argument consisting of two or more propositions and a final conclusion derived from them.
        "syllogism"
      | xsd:Name
    }?,
    empty
  }
item =
  
  ## contient un composant d'une liste. [3.7. Lists 2.5. The Revision Description]
  element item {
    macro.specialPara,
    att.global.attributes,
    att.sortable.attributes,
    empty
  }
label =
  
  ## (étiquette) contient l'étiquette attachée à un item dans une liste ; dans les glossaires, il marque le terme qui est défini. [3.7. Lists]
  element label {
    macro.phraseSeq,
    att.global.attributes,
    att.typed.attributes,
    att.placement.attributes,
    empty
  }
head =
  
  ## (en-tête) contient tout type d'en-tête, par exemple le titre d'une section, ou l'intitulé d'une liste, d'un glossaire, d'une description de manuscrit, etc. [4.2.1. Headings and Trailers]
  element head {
    (text
     | model.gLike
     | model.phrase
     | model.inter
     | model.lLike
     | model.global)*,
    att.global.attributes,
    att.typed.attributes,
    empty
  }
author =
  
  ## (auteur) dans une référence bibliographique contient le nom de la (des) personne(s) physique(s) ou du collectif, auteur(s) d'une oeuvre ; par exemple dans la même forme que celle utilisée par une référence bibliographique reconnue. [3.11.2.2. Titles, Authors, and Editors 2.2.1. The Title Statement]
  element author {
    macro.phraseSeq, att.global.attributes, att.naming.attributes, empty
  }
title =
  
  ## (titre) contient le titre complet d'une oeuvre quelconque [3.11.2.2. Titles, Authors, and Editors 2.2.1. The Title Statement 2.2.5. The Series Statement]
  element title {
    macro.paraContent,
    att.global.attributes,
    att.canonical.attributes,
    att.typed.attribute.subtype,
    
    ## caractérise le titre selon une typologie adaptée.
    ## Exemple de valeurs possibles: 1] main; 2] sub(subordinate) ; 3] alt(alternate) ; 4] short; 5] desc(descriptive) 
    attribute type { data.enumerated }?,
    empty
  }
teiHeader =
  
  ## (en-tête TEI) fournit des informations descriptives et déclaratives qui constituent une page de titre électronique au début de tout texte conforme à la TEI. [2.1.1. The TEI Header and Its Components 15.1. Varieties of Composite Text]
  element teiHeader {
    (fileDesc, model.teiHeaderPart*),
    att.global.attributes,
    
    ## spécifie le type de document auquel l'en-tête TEI se rapporte.
    ## Exemple de valeurs possibles: 1] text; 2] corpus
    [ a:defaultValue = "text" ] attribute type { data.enumerated }?,
    empty
  }
fileDesc =
  
  ## (description bibliographique du fichier) contient une description bibliographique complète du fichier électronique. [2.2. The File Description 2.1.1. The TEI Header and Its Components]
  element fileDesc {
    ((titleStmt, publicationStmt), sourceDesc+),
    att.global.attributes,
    empty
  }
titleStmt =
  
  ## (mention de titre) regroupe les informations sur le titre d’une œuvre et les personnes ou institutions responsables de son contenu intellectuel. [2.2.1. The Title Statement 2.2. The File Description]
  element titleStmt {
    (title+, model.respLike*), att.global.attributes, empty
  }
publicationStmt =
  
  ## (mention de publication) regroupe des informations concernant la publication ou la diffusion d’un texte électronique ou d’un autre type de texte. [2.2.4. Publication, Distribution,
  ## Licensing, etc. 2.2. The File Description]
  element publicationStmt {
    ((model.publicationStmtPart.agency,
      model.publicationStmtPart.detail*)+
     | model.pLike+),
    att.global.attributes,
    empty
  }
sourceDesc =
  
  ## (description de la source) décrit la source à partir de laquelle un texte électronique a été dérivé ou produit, habituellement une description bibliographique pour un texte numérisé, ou une expression comme "document numérique natif " pour un texte qui n'a aucune existence précédente. [2.2.7. The Source Description]
  element sourceDesc {
    (model.pLike+
     | (model.biblLike | model.sourceDescPart | model.listLike)+),
    att.global.attributes,
    empty
  }
TEI =
  
  ## (document TEI) contient un seul document conforme à la TEI, qui comprend un en-tête TEI et un texte, soit de façon isolée, soit comme partie d’un élément teiCorpus. [4. Default Text Structure 15.1. Varieties of Composite Text]
  element TEI {
    (teiHeader,
     ((model.resourceLike+, \text?) | \text))
    >> sch:ns [ prefix = "tei" uri = "http://www.tei-c.org/ns/1.0" ]
    >> sch:ns [ prefix = "xs" uri = "http://www.w3.org/2001/XMLSchema" ]
    >> sch:ns [
         prefix = "rng"
         uri = "http://relaxng.org/ns/structure/1.0"
       ],
    att.global.attributes,
    empty
  }
\text =
  
  ## (texte) contient un seul texte quelconque, simple ou composite, par exemple un poème ou une pièce de théâtre, un recueil d’essais, un roman, un dictionnaire ou un échantillon de corpus. [4. Default Text Structure 15.1. Varieties of Composite Text]
  element text {
    (model.global*,
     (front, model.global*)?,
     (body),
     model.global*,
     (back, model.global*)?),
    att.global.attributes,
    att.typed.attributes,
    empty
  }
body =
  
  ## (corps du texte) contient la totalité du corps d’un seul texte simple, à l’exclusion de toute partie pré- ou post-liminaire. [4. Default Text Structure]
  element body {
    (model.global*,
     (model.divTop, (model.global | model.divTop)*)?,
     (model.divGenLike, (model.global | model.divGenLike)*)?,
     ((model.divLike, (model.global | model.divGenLike)*)+
      | (model.div1Like, (model.global | model.divGenLike)*)+
      | ((model.common, model.global*)+,
         ((model.divLike, (model.global | model.divGenLike)*)+
          | (model.div1Like, (model.global | model.divGenLike)*)+)?)),
     (model.divBottom, model.global*)*),
    att.global.attributes,
    empty
  }
\div =
  
  ## (division du texte) contient une subdivision dans le texte préliminaire, dans le corps d’un texte ou dans le texte postliminaire. [4.1. Divisions of the Body]
  element div {
    ((model.divTop | model.global)*,
     ((((model.divLike | model.divGenLike), model.global*)+
       | ((model.common, model.global*)+,
          ((model.divLike | model.divGenLike), model.global*)*)),
      (model.divBottom, model.global*)*)?),
    att.global.attributes,
    att.divLike.attributes,
    att.typed.attributes,
    empty
  }
front =
  
  ## (texte préliminaire) contient tout ce qui est au début du document, avant le corps du texte : page de titre, dédicaces, préfaces, etc. [4.6. Title Pages 4. Default Text Structure]
  element front {
    ((model.frontPart
      | model.pLike
      | model.pLike.front
      | model.global)*,
     (((model.div1Like,
        (model.div1Like | model.frontPart | model.global)*)
       | (model.divLike,
          (model.divLike | model.frontPart | model.global)*)),
      (model.divBottom, (model.divBottom | model.global)*)?)?),
    att.global.attributes,
    empty
  }
back =
  
  ## (texte annexe) contient tout supplément placé après la partie principale d'un texte : appendice, etc. [4.7. Back Matter 4. Default Text Structure]
  element back {
    ((model.frontPart
      | model.pLike.front
      | model.pLike
      | model.listLike
      | model.global)*,
     ((model.div1Like,
       (model.frontPart | model.div1Like | model.global)*)
      | (model.divLike,
         (model.frontPart | model.divLike | model.global)*))?,
     (model.divBottomPart, (model.divBottomPart | model.global)*)?),
    att.global.attributes,
    empty
  }
att.msExcerpt.attributes = att.msExcerpt.attribute.defective
att.msExcerpt.attribute.defective =
  
  ## indique si le passage décrit est fautif, i.e. incomplet en raison d'une lacune ou d'une détérioration.
  [ a:defaultValue = "false" ] attribute defective { data.xTruthValue }?
msDesc =
  
  ## (description d'un manuscrit) contient la description d'un manuscrit bien individualisé [10.1. Overview]
  element msDesc {
    (msIdentifier,
     model.headLike*,
     (model.pLike+
      | (msContents?, physDesc?, history?, additional?, msPart*))),
    att.global.attributes,
    att.sortable.attributes,
    att.typed.attributes,
    empty
  }
catchwords =
  
  ## (réclames) décrit le système utilisé pour s'assurer que les cahiers formant un manuscrit ou un incunable sont dans le bon ordre, typiquement au moyen d'annotations en bas de page. [10.3.7. Catchwords, Signatures, Secundo Folio]
  element catchwords { macro.phraseSeq, att.global.attributes, empty }
dimensions =
  
  ## (dimensions) contient une spécification des dimensions. [10.3.4. Dimensions]
  element dimensions {
    ((dim | model.dimLike)*)
    >> sch:pattern [
         id = "tei_bare-dimensions-duplicateDim-constraint-1"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:dimensions"
           "\x{a}" ~
           "               "
           sch:report [
             test = "count(tei:width)> 1"
             "\x{a}" ~
             "The element "
             sch:name [ ]
             " may appear once only\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id = "tei_bare-dimensions-duplicateDim-constraint-2"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:dimensions"
           "\x{a}" ~
           "               "
           sch:report [
             test = "count(tei:height)> 1"
             "\x{a}" ~
             "The element "
             sch:name [ ]
             " may appear once only\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id = "tei_bare-dimensions-duplicateDim-constraint-3"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:dimensions"
           "\x{a}" ~
           "               "
           sch:report [
             test = "count(tei:depth)> 1"
             "\x{a}" ~
             "The element "
             sch:name [ ]
             " may appear once only\x{a}" ~
             "      "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attributes,
    att.dimensions.attributes,
    
    ## indique quel aspect de l'objet est mesuré.
    ## Exemple de valeurs possibles: 1] leaves; 2] ruled; 3] pricked; 4] written; 5] miniatures; 6] binding; 7] box
    attribute type { data.enumerated }?,
    empty
  }
dim =
  
  ## contains any single measurement forming part of a dimensional specification of some sort. [10.3.4. Dimensions]
  element dim {
    macro.xtext,
    att.global.attributes,
    att.typed.attributes,
    att.dimensions.attributes,
    empty
  }
height =
  
  ## (hauteur) contient une dimension prise sur l'axe parallèle au dos du manuscrit. [10.3.4. Dimensions]
  element height {
    macro.xtext, att.global.attributes, att.dimensions.attributes, empty
  }
depth =
  
  ## (épaisseur) contient une dimension mesurée sur le dos du manuscrit. [10.3.4. Dimensions]
  element depth {
    macro.xtext, att.global.attributes, att.dimensions.attributes, empty
  }
width =
  
  ## (largeur) contient une dimension mesurée sur l'axe perpendiculaire au dos du manuscrit. [10.3.4. Dimensions]
  element width {
    macro.xtext, att.global.attributes, att.dimensions.attributes, empty
  }
heraldry =
  
  ## (héraldique) contient une devise ou une formule d'héraldique, comme celles qu'on trouve sur un blason, des armoiries, etc. [10.3.8. Heraldry]
  element heraldry { macro.phraseSeq, att.global.attributes, empty }
locus =
  
  ## (locus) définit un emplacement au sein d'un manuscrit ou d'une partie de manuscrit, souvent une séquence, éventuellement discontinue, de références de feuillets. [10.3.5. References to Locations within a Manuscript]
  element locus {
    macro.xtext,
    att.global.attributes,
    att.pointing.attributes,
    
    ## (système) désigne le système de foliotation utilisé pour localiser la subdivision du manuscrit qui est en cours de description.
    attribute scheme { data.pointer }?,
    
    ## (depuis) Spécifie, sous une forme normalisée, le point de départ de la localisation.
    attribute from { data.word }?,
    
    ## (jusqu'à) Spécifie, sous une forme normalisée, la borne de fin pour la localisation.
    attribute to { data.word }?,
    empty
  }
locusGrp =
  
  ## (groupe d'emplacements) regroupe un certain nombre d'emplacements qui forment ensemble un item identifiable bien que discontinu dans un manuscrit ou une partie de manuscrit selon une foliotation spécifique. [10.3.5. References to Locations within a Manuscript]
  element locusGrp {
    locus+,
    att.global.attributes,
    
    ## (système) désigne le système de foliotation selon lequel les emplacements contenus dans le groupe sont définis.
    attribute scheme { data.pointer }?,
    empty
  }
material =
  
  ## (matériau) Contient un mot ou une expression décrivant le ou les matériau(x) utilisé(s) pour fabriquer un manuscrit (ou une partie d'un manuscrit). [10.3.2. Material and Object Type]
  element material {
    macro.phraseSeq,
    att.global.attributes,
    att.canonical.attributes,
    empty
  }
objectType =
  
  ## (type d'objet) contient un mot ou une expression qui décrit le type de l'objet consideré. [10.3.2. Material and Object Type]
  element objectType {
    macro.phraseSeq,
    att.global.attributes,
    att.canonical.attributes,
    empty
  }
origDate =
  
  ## (date de la création) Contient une date, dans une forme libre, utilisée pour dater la création d'un manuscrit ou d'une partie d'un manuscrit. [10.3.1. Origination]
  element origDate {
    (text | model.gLike | model.phrase | model.global)*,
    att.global.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    att.typed.attributes,
    empty
  }
origPlace =
  
  ## (lieu de création) Contient un nom de lieu, dans une forme libre, utilisé pour désigner l'endroit où a été produit un manuscrit ou une partie d'un manuscrit. [10.3.1. Origination]
  element origPlace {
    macro.phraseSeq,
    att.global.attributes,
    att.naming.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    att.typed.attributes,
    empty
  }
secFol =
  
  ## (deuxième folio) Le mot ou les mots repris d'un point précisément connu d'un codex (comme le début du second feuillet) pour identifier celui-ci de façon univoque. [10.3.7. Catchwords, Signatures, Secundo Folio]
  element secFol { macro.phraseSeq, att.global.attributes, empty }
signatures =
  
  ## (signatures) Contient une étude des signatures trouvées sur un feuillet ou sur un cahier dans un manuscrit. [10.3.7. Catchwords, Signatures, Secundo Folio]
  element signatures { macro.specialPara, att.global.attributes, empty }
stamp =
  
  ## (cachet) Contient un mot ou une expression décrivant un cachet ou une marque du même genre. [10.3.3. Watermarks and Stamps]
  element stamp {
    macro.phraseSeq,
    att.global.attributes,
    att.typed.attributes,
    att.datable.attributes,
    empty
  }
watermark =
  
  ## (filigrane) Contient un mot ou une expression décrivant un filigrane ou une marque du même genre. [10.3.3. Watermarks and Stamps]
  element watermark { macro.phraseSeq, att.global.attributes, empty }
msIdentifier =
  
  ## (identifiant du manuscrit) Contient les informations requises pour identifier le manuscrit en cours de description. [10.4. The Manuscript Identifier]
  element msIdentifier {
    ((model.placeNamePart_sequenceOptional,
      institution?,
      repository?,
      collection*),
     (msName | altIdentifier)*)
    >> sch:pattern [
         id = "tei_bare-msIdentifier-msId_minimal-constraint-4"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:msIdentifier"
           "\x{a}" ~
           "               "
           sch:report [
             test =
               "not(parent::tei:msPart) and       (local-name(*[1])='idno' or       local-name(*[1])='altIdentifier' or       normalize-space(.)='')"
             "An msIdentifier must contain either a repository or location of some type, or a manuscript name"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attributes,
    empty
  }
institution =
  
  ## (institution) Contient le nom d'un organisme (comme une université ou une bibliothèque), avec lequel un manuscrit est identifié ; en général c'est le nom de l'institution qui conserve ce manuscrit. [10.4. The Manuscript Identifier]
  element institution {
    macro.xtext, att.global.attributes, att.naming.attributes, empty
  }
repository =
  
  ## (lieu de conservation) Contient le nom d'un dépôt dans lequel des manuscrits sont entreposés, et qui peut faire partie d'une institution. [10.4. The Manuscript Identifier]
  element repository {
    macro.xtext, att.global.attributes, att.naming.attributes, empty
  }
collection =
  
  ## (collection) Contient le nom d'une collection de manuscrits, ceux-ci ne se trouvant pas nécessairement dans le même lieu de conservation. [10.4. The Manuscript Identifier]
  element collection {
    macro.xtext,
    att.global.attributes,
    att.naming.attributes,
    att.typed.attributes,
    empty
  }
altIdentifier =
  
  ## (autre identifiant) Contient un autre ou un ancien identifiant pour un manuscrit, par exemple un numéro anciennement utilisé dans un catalogue. [10.4. The Manuscript Identifier]
  element altIdentifier {
    (model.placeNamePart_sequenceOptional,
     institution?,
     repository?,
     collection?),
    att.global.attributes,
    att.typed.attributes,
    empty
  }
msName =
  
  ## (autre nom) contient un autre nom, dans une forme libre, utilisé pour désigner le manuscrit, tel qu'un surnom ou un ocellus nominum. [10.4. The Manuscript Identifier]
  element msName {
    macro.xtext, att.global.attributes, att.typed.attributes, empty
  }
colophon =
  
  ## (colophon) contient le colophon d'une section d'un manuscrit, c'est-à-dire la transcription des informations relatives à la date, au lieu, à l'organisme commanditaire ou aux raisons de la production du manuscrit. [10.6.1. The msItem and msItemStruct Elements]
  element colophon { macro.phraseSeq, att.global.attributes, empty }
explicit =
  
  ## (explicit) contient l'explicit d'une section d'un manuscrit, c'est-à-dire les mots terminant le texte proprement dit, à l'exclusion de toute rubrique ou colophon qui pourraient le suivre. [10.6.1. The msItem and msItemStruct Elements]
  element explicit {
    macro.phraseSeq,
    att.global.attributes,
    att.typed.attributes,
    att.msExcerpt.attributes,
    empty
  }
filiation =
  
  ## (filiation) contient les informations sur la filiation du manuscrit, c'est-à-dire sur ses relations avec d'autres manuscrits connus du même texte, ses protographes, antigraphes et apographes. [10.6.1. The msItem and msItemStruct Elements]
  element filiation {
    macro.specialPara,
    att.global.attributes,
    att.typed.attributes,
    empty
  }
finalRubric =
  
  ## (rubrique de fin) Contient les derniers mots d'une section de texte, qui incluent souvent la mention de son auteur et de son titre, et sont généralement différenciés du texte lui-même par l'utilisation d'une encre rouge, par une taille ou un style d'écriture particuliers, ou par tout autre moyen visuel. [10.6.1. The msItem and msItemStruct Elements]
  element finalRubric {
    macro.phraseSeq, att.global.attributes, att.typed.attributes, empty
  }
incipit =
  
  ## contient l'incipit d'une section d'un manuscrit, c'est-à-dire les mots commençant le texte proprement dit, à l'exclusion de toute rubrique qui pourrait les précéder, la transcription étant de longueur suffisante pour permettre l'identification de l'œuvre. De tels incipit étaient autrefois souvent utilisés à la place du titre de l'œuvre, pour l'identifier. [10.6.1. The msItem and msItemStruct Elements]
  element incipit {
    macro.phraseSeq,
    att.global.attributes,
    att.typed.attributes,
    att.msExcerpt.attributes,
    empty
  }
msContents =
  
  ## (contenu du manuscrit) décrit le contenu intellectuel d'un manuscrit ou d'une partie d'un manuscrit, soit en une série de paragraphes p, soit sous la forme d'une série d'éléments structurés msItem concernant les items du manuscrit. [10.6. Intellectual Content]
  element msContents {
    (model.pLike+
     | (summary?, (msItem | msItemStruct)*)),
    att.global.attributes,
    att.msExcerpt.attributes,
    
    ## spécifie la ou les catégories ou classes auxquelles le manuscrit appartient.
    attribute class {
      list { data.pointer+ }
    }?,
    empty
  }
msItem =
  
  ## (item de manuscrit) décrit une œuvre ou un item individualisés dans le contenu intellectuel d'un manuscrit ou d'une partie de manuscrit. [10.6.1. The msItem and msItemStruct Elements]
  element msItem {
    ((locus | locusGrp)*,
     (model.pLike+
      | (model.titlepagePart | model.msItemPart | model.global)+)),
    att.global.attributes,
    att.msExcerpt.attributes,
    
    ## spécifie la ou les catégories ou classes auxquelles l'item appartient.
    attribute class {
      list { data.pointer+ }
    }?,
    empty
  }
msItemStruct =
  
  ## (description structurée d'un item de manuscrit) contient la description structurée d'un item ou d'une œuvre, dans le contenu intellectuel d'un manuscrit ou d'une partie d'un manuscrit. [10.6.1. The msItem and msItemStruct Elements]
  element msItemStruct {
    ((locus | locusGrp)?,
     (model.pLike+
      | (author*,
         title*,
         rubric?,
         incipit?,
         msItemStruct*,
         explicit?,
         finalRubric?,
         colophon*,
         decoNote*,
         empty*,
         model.noteLike*))),
    att.global.attributes,
    att.msExcerpt.attributes,
    
    ## (classe) spécifie la ou les catégories ou classes auxquelles l'item appartient.
    attribute class {
      list { data.pointer+ }
    }?,
    empty
  }
rubric =
  
  ## (rubrique) contient le texte d'une rubrique ou d'un intitulé propres à un item, c'est-à-dire des mots qui signalent le début du texte, qui incluent souvent la mention de son auteur et de son titre, et qui sont différenciés du texte lui-même, généralement à l'encre rouge, par une taille ou un style d'écriture particuliers, ou par tout autre procédé de ce genre. [10.6.1. The msItem and msItemStruct Elements]
  element rubric {
    macro.phraseSeq, att.global.attributes, att.typed.attributes, empty
  }
summary =
  
  ## contains an overview of the available information concerning some aspect of an item (for example, its intellectual content, history, layout, typography etc.) as a complement or alternative to the more detailed information carried by more specific elements. [10.6. Intellectual Content]
  element summary { macro.specialPara, att.global.attributes, empty }
physDesc =
  
  ## (description physique) contient la description physique complète d'un manuscrit ou d'une partie d'un manuscrit, éventuellement structurée en utilisant les éléments plus spécialisés appartenant à la classe model.physDescPart. [10.7. Physical Description]
  element physDesc {
    (model.pLike*, model.physDescPart_sequenceOptional),
    att.global.attributes,
    empty
  }
objectDesc =
  
  ## (description d'objet) contient la description des composants matériels de l'objet en cours de traitement [10.7.1. Object Description]
  element objectDesc {
    (model.pLike+ | (supportDesc?, layoutDesc?)),
    att.global.attributes,
    
    ## (forme) contient un nom abrégé spécifique au projet, désignant la forme physique du support, par exemple : codex, rouleau, fragment, fragment de feuillet, découpe, etc.
    attribute form { data.enumerated }?,
    empty
  }
supportDesc =
  
  ## (description du support) Regroupe les éléments décrivant le support physique du texte du manuscrit. [10.7.1. Object Description]
  element supportDesc {
    (model.pLike+ | (support?, foliation*, collation?, condition?)),
    att.global.attributes,
    
    ## (matériau) contient un nom abrégé propre au projet désignant le matériau qui a principalement servi pour fabriquer le support.
    ## Les valeurs suggérées comprennent: 1] paper; 2] parch(parchment) ; 3] mixed
    attribute material {
      
      ##
      "paper"
      | 
        ## (parchemin) 
        "parch"
      | 
        ##
        "mixed"
      | xsd:Name
    }?,
    empty
  }
support =
  
  ## (support) contient la description des matériaux, techniques, etc., qui ont servi à fabriquer le support physique du texte du manuscrit. [10.7.1. Object Description]
  element support { macro.specialPara, att.global.attributes, empty }
collation =
  
  ## (collation) contient la description de l'organisation des feuillets ou bifeuillets d'un manuscrit [10.7.1. Object Description]
  element collation { macro.specialPara, att.global.attributes, empty }
foliation =
  
  ## (foliotation) décrit le ou les systèmes de numérotation des feuillets ou pages d'un codex [10.7.1.4. Foliation]
  element foliation { macro.specialPara, att.global.attributes, empty }
condition =
  
  ## (état matériel) contient la description de l'état matériel du manuscrit. [10.7.1.5. Condition]
  element condition { macro.specialPara, att.global.attributes, empty }
layoutDesc =
  
  ## (description de la mise en page) rassemble les descriptions des mises en page d' un manuscrit. [10.7.2. Writing, Decoration, and Other Notations]
  element layoutDesc {
    (model.pLike+ | (summary?, layout+)),
    att.global.attributes,
    empty
  }
layout =
  
  ## (mise en page) décrit comment le texte est disposé sur la page, ce qui inclut les informations sur d'éventuels systèmes de réglure, de piqûre ou d'autres techniques de préparation de la page. [10.7.2. Writing, Decoration, and Other Notations]
  element layout {
    macro.specialPara,
    att.global.attributes,
    
    ## (colonnes) spécifie le nombre de colonnes présentes sur une page
    attribute columns {
      list { data.count, data.count? }
    }?,
    
    ## (lignes de réglure) spécifie le nombre de lignes de réglure présentes par colonne
    attribute ruledLines {
      list { data.count, data.count? }
    }?,
    
    ## (lignes d'écriture) spécifie le nombre de lignes écrites par colonne
    attribute writtenLines {
      list { data.count, data.count? }
    }?,
    empty
  }
handDesc =
  
  ## (description des écritures) contient la description des différents types d'écriture utilisés dans un manuscrit. [10.7.2. Writing, Decoration, and Other Notations]
  element handDesc {
    (model.pLike+ | summary?),
    att.global.attributes,
    
    ## (mains) spécifie le nombre de mains différentes qui ont pu être identifiées dans le manuscrit
    attribute hands { data.count }?,
    empty
  }
typeDesc =
  
  ## (description des styles de caractère) contient la description des styles de caractères ou d'autres aspects de l'impression d'un incunable ou d'une autre source imprimée. [10.7.2.1. Writing]
  element typeDesc {
    (model.pLike+ | summary?), att.global.attributes, empty
  }
scriptDesc =
  
  ## contains a description of the scripts used in a manuscript or similar source. [10.7.2.1. Writing]
  element scriptDesc {
    (model.pLike+ | summary?), att.global.attributes, empty
  }
musicNotation =
  
  ## (notation musicale) contient la description d'un type de notation musicale. [10.7.2. Writing, Decoration, and Other Notations]
  element musicNotation {
    macro.specialPara, att.global.attributes, empty
  }
decoDesc =
  
  ## (description de la décoration) contient la description de la décoration du manuscrit, soit en une série de paragraphes p, soit sous la forme d'une série d'éléments thématiques decoNote [10.7.3. Bindings, Seals, and Additional Material]
  element decoDesc {
    (model.pLike+ | (summary?, decoNote+)),
    att.global.attributes,
    empty
  }
decoNote =
  
  ## (note sur un élément de décoration) contient une note décrivant soit un élément de décoration du mansucrit, soit une catégorie relativement homogène de tels éléments. [10.7.3. Bindings, Seals, and Additional Material]
  element decoNote {
    macro.specialPara,
    att.global.attributes,
    att.typed.attributes,
    empty
  }
additions =
  
  ## (ajouts) contient la description des ajouts significatifs trouvés dans un manuscrit, tels que gloses marginales ou autres annotations. [10.7.2. Writing, Decoration, and Other Notations]
  element additions { macro.specialPara, att.global.attributes, empty }
bindingDesc =
  
  ## (description de la reliure) décrit les reliures actuelles et anciennes d'un manuscrit, soit en une série de paragraphes p, soit sous la forme d'une série d'éléments binding, un pour chaque reliure [10.7.3.1. Binding Descriptions]
  element bindingDesc {
    ((model.pLike | decoNote | condition)+ | binding+),
    att.global.attributes,
    empty
  }
binding =
  
  ## (reliure) contient la description d'une reliure, i.e. du type de couverture, d'ais, etc., rencontrés. [10.7.3.1. Binding Descriptions]
  element binding {
    (model.pLike | condition | decoNote)+,
    att.global.attributes,
    att.datable.attributes,
    
    ## (contemporaine) spécifie si la reliure est contemporaine ou non de l'essentiel du contenu du manuscrit.
    attribute contemporary { data.xTruthValue }?,
    empty
  }
sealDesc =
  
  ## (description des sceaux) décrit les sceaux ou autres objets attachés au manuscrit, soit en une série de paragraphes p, soit sous la forme d'une série d'éléments seal, complétés éventuellement par des éléments decoNote. [10.7.3.2. Seals]
  element sealDesc {
    (model.pLike+
     | (summary?, (decoNote | seal | condition)+)),
    att.global.attributes,
    empty
  }
seal =
  
  ## (sceau) contient la description d'un sceau ou d'un objet similaire, attaché au manuscrit. [10.7.3.2. Seals]
  element seal {
    (model.pLike | decoNote)+,
    att.global.attributes,
    att.typed.attributes,
    att.datable.attributes,
    
    ## (contemporain) spécifie si le sceau est ou non contemporain du manuscrit auquel il est attaché.
    attribute contemporary { data.xTruthValue }?,
    empty
  }
accMat =
  
  ## (matériel d'accompagnement) donne des détails sur tout matériel d'accompagnement étroitement associé au manuscrit, tel que documents non contemporains ou fragments reliés avec le manuscrit à une époque antérieure. [10.7.3.3. Accompanying Material]
  element accMat {
    macro.specialPara,
    att.global.attributes,
    att.typed.attributes,
    empty
  }
history =
  
  ## (histoire) rassemble les éléments servant à donner un historique complet du manuscrit ou d'une partie du manuscrit. [10.8. History]
  element history {
    (model.pLike+ | (summary?, origin?, provenance*, acquisition?)),
    att.global.attributes,
    empty
  }
origin =
  
  ## (origine) contient des informations sur l'origine du manuscrit ou de la partie de manuscrit. [10.8. History]
  element origin {
    macro.specialPara,
    att.global.attributes,
    att.editLike.attributes,
    att.datable.attributes,
    empty
  }
provenance =
  
  ## (provenance) contient des informations sur un épisode précis de l'histoire du manuscrit ou de la partie du manuscrit, après sa création et avant son acquisition [10.8. History]
  element provenance {
    macro.specialPara,
    att.global.attributes,
    att.datable.attributes,
    att.typed.attributes,
    att.source.attributes,
    empty
  }
acquisition =
  
  ## (acquisition) contient des informations sur les modalités et circonstances de l'entrée du manuscrit ou de la partie du manuscrit dans l'institution qui le détient [10.8. History]
  element acquisition {
    macro.specialPara,
    att.global.attributes,
    att.datable.attributes,
    empty
  }
additional =
  
  ## (informations complémentaires) regroupe les informations complémentaires sur le manuscrit, incluant une bibliographie, des indications sur ses reproductions, ou des informations sur sa conservation et sur sa gestion [10.9. Additional Information]
  element additional {
    (adminInfo?, surrogates?), att.global.attributes, empty
  }
adminInfo =
  
  ## (informations administratives) contient, pour le manuscrit en cours de description, les informations sur son détenteur actuel, sur ses conditions d'accès et sur les modalités de sa description. [10.9.1. Administrative Information]
  element adminInfo {
    (recordHist?, custodialHist?, model.noteLike?),
    att.global.attributes,
    empty
  }
recordHist =
  
  ## (histoire de la description) donne des informations sur la source de la description et sur les modifications apportées à la description précédente. [10.9.1. Administrative Information]
  element recordHist {
    (model.pLike+ | source), att.global.attributes, empty
  }
source =
  
  ## (source) décrit la source des informations contenues dans la description du manuscrit. [10.9.1.1. Record History]
  element source { macro.specialPara, att.global.attributes, empty }
custodialHist =
  
  ## (histoire de la conservation) contient des informations sur l'histoire de la conservation, soit en texte libre, soit sous la forme d'une série d'éléments custEvent. [10.9.1.2. Availability and Custodial History]
  element custodialHist {
    (model.pLike+ | custEvent+), att.global.attributes, empty
  }
custEvent =
  
  ## (événement dans la conservation) décrit un événement dans l'histoire de la conservation du manuscrit. [10.9.1.2. Availability and Custodial History]
  element custEvent {
    macro.specialPara,
    att.global.attributes,
    att.datable.attributes,
    att.typed.attributes,
    empty
  }
surrogates =
  
  ## (reproductions) contient des informations sur toute reproduction numérique ou photographique du manuscrit en cours de description, qu'elle soit détenue par l'institution de conservation ou ailleurs. [10.9. Additional Information]
  element surrogates { macro.specialPara, att.global.attributes, empty }
msPart =
  
  ## (partie d'un manuscrit) contient des informations sur un manuscrit distinct à l'origine, ou sur une partie d'un manuscrit, qui constitue actuellement une section d'un manuscrit composite. [10.10. Manuscript Parts]
  element msPart {
    ((altIdentifier | msIdentifier),
     model.headLike*,
     (model.pLike+
      | (msContents?, physDesc?, history?, additional?, msPart*)))
    >> sch:pattern [
         id =
           "tei_bare-msPart-deprecate-altIdentifier-child-constraint-5"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:msPart"
           "\x{a}" ~
           "               "
           sch:report [
             role = "nonfatal"
             test = "child::tei:altIdentifier"
             "WARNING: use of deprecated method — the use of the altIdentifier element as a direct child of the msPart element will be removed from the TEI on 2016-09-09"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attributes,
    empty
  }
att.datable.custom.attributes =
  att.datable.custom.attribute.when-custom,
  att.datable.custom.attribute.notBefore-custom,
  att.datable.custom.attribute.notAfter-custom,
  att.datable.custom.attribute.from-custom,
  att.datable.custom.attribute.to-custom,
  att.datable.custom.attribute.datingPoint,
  att.datable.custom.attribute.datingMethod
att.datable.custom.attribute.when-custom =
  
  ## supplies the value of a date or time in some custom standard form.
  attribute when-custom {
    list { data.word+ }
  }?
att.datable.custom.attribute.notBefore-custom =
  
  ## specifies the earliest possible date for the event in some custom standard form.
  attribute notBefore-custom {
    list { data.word+ }
  }?
att.datable.custom.attribute.notAfter-custom =
  
  ## specifies the latest possible date for the event in some custom standard form.
  attribute notAfter-custom {
    list { data.word+ }
  }?
att.datable.custom.attribute.from-custom =
  
  ## indicates the starting point of the period in some custom standard form.
  attribute from-custom {
    list { data.word+ }
  }?
att.datable.custom.attribute.to-custom =
  
  ## indicates the ending point of the period in some custom standard form.
  attribute to-custom {
    list { data.word+ }
  }?
att.datable.custom.attribute.datingPoint =
  
  ## supplies a pointer to some location defining a named point in time with reference to which the datable item is understood to have occurred
  attribute datingPoint { data.pointer }?
att.datable.custom.attribute.datingMethod =
  
  ## supplies a pointer to a calendar element or other means of interpreting the values of the custom dating attributes.
  attribute datingMethod { data.pointer }?
model.persNamePart =
  surname | forename | genName | nameLink | addName | roleName
model.persNamePart_alternation =
  surname | forename | genName | nameLink | addName | roleName
model.persNamePart_sequence =
  surname, forename, genName, nameLink, addName, roleName
model.persNamePart_sequenceOptional =
  surname?, forename?, genName?, nameLink?, addName?, roleName?
model.persNamePart_sequenceOptionalRepeatable =
  surname*, forename*, genName*, nameLink*, addName*, roleName*
model.persNamePart_sequenceRepeatable =
  surname+, forename+, genName+, nameLink+, addName+, roleName+
att.datable.iso.attributes =
  att.datable.iso.attribute.when-iso,
  att.datable.iso.attribute.notBefore-iso,
  att.datable.iso.attribute.notAfter-iso,
  att.datable.iso.attribute.from-iso,
  att.datable.iso.attribute.to-iso
att.datable.iso.attribute.when-iso =
  
  ## précise une date exacte pour l'évènement selon la forme normalisée ISO 8601, c'est-à-dire aaaa-mm-jj.
  attribute when-iso { data.temporal.iso }?
att.datable.iso.attribute.notBefore-iso =
  
  ## précise la première date possible pour l'évènement selon la forme normalisée, c'est-à-dire aaaa-mm-jj.
  attribute notBefore-iso { data.temporal.iso }?
att.datable.iso.attribute.notAfter-iso =
  
  ## précise la dernière date possible pour l'évènement selon la forme normalisée, c'est-à-dire aaaa-mm-jj.
  attribute notAfter-iso { data.temporal.iso }?
att.datable.iso.attribute.from-iso =
  
  ## Indique le point de départ de la période sous une forme normalisée
  attribute from-iso { data.temporal.iso }?
att.datable.iso.attribute.to-iso =
  
  ## Indique le point final de la période sous une forme normalisée
  attribute to-iso { data.temporal.iso }?
orgName =
  
  ## (nom d'organisation) contient le nom d'une organisation. [13.2.2. Organizational Names]
  element orgName {
    macro.phraseSeq,
    att.global.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    att.personal.attributes,
    att.typed.attributes,
    empty
  }
persName =
  
  ## (nom de personne) contient un nom propre ou une expression nominale se référant à une personne, pouvant inclure tout ou partie de ses prénoms, noms de famille, titres honorifiques, noms ajoutés, etc. [13.2.1. Personal Names]
  element persName {
    macro.phraseSeq,
    att.global.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    att.personal.attributes,
    att.typed.attributes,
    empty
  }
surname =
  
  ## (nom de famille) contient un nom de famille (hérité) par opposition à un nom donné, nom de baptême ou surnom. [13.2.1. Personal Names]
  element surname {
    macro.phraseSeq,
    att.global.attributes,
    att.personal.attributes,
    att.typed.attributes,
    empty
  }
forename =
  
  ## (prénom) contient un prénom, qu'il soit donné ou un nom de baptême. [13.2.1. Personal Names]
  element forename {
    macro.phraseSeq,
    att.global.attributes,
    att.personal.attributes,
    att.typed.attributes,
    empty
  }
genName =
  
  ## (qualificatif générationnel de nom) contient une composante de nom utilisée pour distinguer des noms, par ailleurs similaires, sur la base de l'âge ou de la génération des personnes concernées. [13.2.1. Personal Names]
  element genName {
    macro.phraseSeq,
    att.global.attributes,
    att.personal.attributes,
    att.typed.attributes,
    empty
  }
nameLink =
  
  ## (lien entre les composants d'un nom) contient une particule ou une expression exprimant un lien, utilisés dans un nom mais considérés comme n'en faisant pas partie, comme "van der" ou "de". [13.2.1. Personal Names]
  element nameLink {
    macro.phraseSeq, att.global.attributes, att.typed.attributes, empty
  }
addName =
  
  ## (nom additionnel) contient une composante de nom additionnelle, comme un surnom, une épithète, un alias ou toute autre expression descriptive utilisée dans un nom de personne. [13.2.1. Personal Names]
  element addName {
    macro.phraseSeq,
    att.global.attributes,
    att.personal.attributes,
    att.typed.attributes,
    empty
  }
roleName =
  
  ## (rôle) contient un composant du nom d'une personne, indiquant que celle-ci a un rôle ou une position particulière dans la société, comme un titre ou un rang officiel. [13.2.1. Personal Names]
  element roleName {
    macro.phraseSeq,
    att.global.attributes,
    att.personal.attributes,
    att.typed.attributes,
    empty
  }
placeName =
  
  ## (nom de lieu) contient un nom de lieu absolu ou relatif. [13.2.3. Place Names]
  element placeName {
    macro.phraseSeq,
    att.datable.attributes,
    att.editLike.attributes,
    att.global.attributes,
    att.personal.attributes,
    att.typed.attributes,
    empty
  }
bloc =
  
  ## (bloc) contient le nom d'une unité géo-politique composée d'au moins deux états ou pays [13.2.3. Place Names]
  element bloc {
    macro.phraseSeq,
    att.global.attributes,
    att.naming.attributes,
    att.typed.attributes,
    att.datable.attributes,
    empty
  }
country =
  
  ## (pays) contient le nom d'une unité géo-politique, comme une nation, un pays, une colonie ou une communauté, plus grande ou administrativement supérieure à une région et plus petite qu'un bloc. [13.2.3. Place Names]
  element country {
    macro.phraseSeq,
    att.global.attributes,
    att.naming.attributes,
    att.typed.attributes,
    att.datable.attributes,
    empty
  }
region =
  
  ## (région) contient le nom d'une unité administrative comme un état, une province ou un comté, plus grande qu'un lieu de peuplement, mais plus petite qu'un pays. [13.2.3. Place Names]
  element region {
    macro.phraseSeq,
    att.global.attributes,
    att.naming.attributes,
    att.typed.attributes,
    att.datable.attributes,
    empty
  }
district =
  
  ## (district) contient le nom d'une subdivision quelconque d'une ville, comme une paroisse, une circonscription électorale ou toute autre unité administrative ou géographique. [13.2.3. Place Names]
  element district {
    macro.phraseSeq,
    att.global.attributes,
    att.naming.attributes,
    att.typed.attributes,
    att.datable.attributes,
    empty
  }
settlement =
  
  ## (lieu de peuplement) contient le nom d'un lieu de peuplement comme une cité, une ville ou un village, identifié comme une unité géo-politique ou administrative unique. [13.2.3. Place Names]
  element settlement {
    macro.phraseSeq,
    att.global.attributes,
    att.naming.attributes,
    att.typed.attributes,
    att.datable.attributes,
    empty
  }
offset =
  
  ## (distance relative) la partie d'une expression temporelle ou spatiale qui indique la distance et/ou la direction entre les deux lieux, dates ou heures sur lesquels porte l'expression. [13.2.3. Place Names]
  element offset {
    macro.phraseSeq,
    att.datable.attributes,
    att.editLike.attributes,
    att.global.attributes,
    att.naming.attributes,
    att.typed.attributes,
    empty
  }
geogName =
  
  ## (nom de lieu géographique) un nom associé à une caractéristique géographique comme Windrush Valley ou le Mont Sinaï. [13.2.3. Place Names]
  element geogName {
    macro.phraseSeq,
    att.datable.attributes,
    att.editLike.attributes,
    att.global.attributes,
    att.naming.attributes,
    att.typed.attributes,
    empty
  }
geogFeat =
  
  ## (nom de caractéristique géographique) contient un nom commun identifiant une caractéristique géographique contenue dans un nom de lieu, comme vallée, mont, etc. [13.2.3. Place Names]
  element geogFeat {
    macro.phraseSeq,
    att.datable.attributes,
    att.editLike.attributes,
    att.global.attributes,
    att.naming.attributes,
    att.typed.attributes,
    empty
  }
affiliation =
  
  ## (affiliation) contient une description non formalisée portant sur l'affiliation présente ou passée d'une personne à une organisation, par exemple un employeur ou un sponsor. [15.2.2. The Participant Description]
  element affiliation {
    macro.phraseSeq,
    att.global.attributes,
    att.editLike.attributes,
    att.datable.attributes,
    att.naming.attributes,
    empty
  }
age =
  
  ## (âge) précise l'âge d'une personne [13.3.2.1. Personal Characteristics]
  element age {
    macro.phraseSeq.limited,
    att.global.attributes,
    att.editLike.attributes,
    att.datable.attributes,
    
    ## fournit un code numérique représentant l'âge ou la tranche d'âge.
    attribute value { data.count }?,
    empty
  }
birth =
  
  ## (naissance) contient des informations sur la naissance d'une personne, comme la date et le lieu [15.2.2. The Participant Description]
  element birth {
    macro.phraseSeq,
    att.global.attributes,
    att.editLike.attributes,
    att.datable.attributes,
    att.naming.attributes,
    empty
  }
climate =
  
  ## (climat) contient des informations sur le climat physique d'un lieu. [13.3.4.3. States, Traits, and Events]
  element climate {
    (model.headLike*,
     (model.pLike+ | model.labelLike+),
     (model.noteLike | model.biblLike)*,
     climate*),
    att.global.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    att.naming.attributes,
    att.typed.attributes,
    empty
  }
death =
  
  ## (décès) contient des informations sur le décès d'une personne, comme la date et le lieu. [15.2.2. The Participant Description]
  element death {
    macro.phraseSeq,
    att.global.attributes,
    att.editLike.attributes,
    att.datable.attributes,
    att.naming.attributes,
    empty
  }
education =
  
  ## (éducation) contient la description du parcours scolaire d'une personne. [15.2.2. The Participant Description]
  element education {
    macro.phraseSeq,
    att.global.attributes,
    att.editLike.attributes,
    att.datable.attributes,
    att.naming.attributes,
    empty
  }
event =
  
  ## (évènement) contient des données liées à tout type d'évènement significatif dans l'existence d'une personne, d'un lieu ou d'une organisation. [13.3.1. Basic Principles]
  element event {
    (model.headLike*,
     (model.pLike+ | model.labelLike+),
     (model.noteLike | model.biblLike | linkGrp | link)*,
     event*),
    att.global.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    att.typed.attributes,
    att.naming.attributes,
    att.sortable.attributes,
    
    ## indique la localisation d'un évènement en pointant vers un élément place
    attribute where { data.pointer }?,
    empty
  }
faith =
  
  ## (religion) précise la foi, la religion ou les croyances d'une personne. [13.3.2.1. Personal Characteristics]
  element faith {
    macro.phraseSeq,
    att.global.attributes,
    att.editLike.attributes,
    att.datable.attributes,
    att.canonical.attributes,
    empty
  }
floruit =
  
  ## (période d'activité) contient des informations sur la période d'activité d'une personne. [13.3.2.1. Personal Characteristics]
  element floruit {
    macro.phraseSeq,
    att.global.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    empty
  }
geo =
  
  ## (coordonnées géographiques) contient toute expression, dans un système de notation, d'un ensemble de coordonnées géographiques représentant un point, une ligne ou une zone sur la surface de la Terre. [13.3.4.1. Varieties of Location]
  element geo { text, att.global.attributes, empty }
langKnowledge =
  
  ## (connaissances linguistiques) synthétise l'état des connaissances linguistiques d'une personne, soit en texte libre soit par une liste d'éléments langKnown. [13.3.2.1. Personal Characteristics]
  element langKnowledge {
    (model.pLike | langKnown+),
    att.global.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    
    ## fournit un ou plusieurs codes de langue valides pour les langues spécifiées.
    attribute tags {
      list { data.language+ }
    }?,
    empty
  }
langKnown =
  
  ## (compétence linguistique) synthétise l'état des connaissances d'une personne relativement à une langue particulière. [15.2.2. The Participant Description]
  element langKnown {
    macro.phraseSeq.limited,
    att.global.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    
    ## fournit un code de langue valide pour la langue concernée.
    attribute tag { data.language },
    
    ## un code indiquant le niveau de connaissance qu'une personne a de cette langue.
    attribute level { data.word }?,
    empty
  }
listOrg =
  
  ## (liste d'organisations) contient une liste d'éléments, chacun d'eux fournissant des informations sur une organisation identifiable. [13.2.2. Organizational Names]
  element listOrg {
    (model.headLike*, (org | listOrg)+, (relation | listRelation)*),
    att.global.attributes,
    att.typed.attributes,
    att.declarable.attributes,
    att.sortable.attributes,
    empty
  }
listEvent =
  
  ## (liste d'événements) contient une liste de descriptions, chacune d'entre elles fournissant des informations sur un événement connu. [13.3.1. Basic Principles]
  element listEvent {
    (model.headLike*, (event | listEvent)+, (relation | listRelation)*),
    att.global.attributes,
    att.typed.attributes,
    att.declarable.attributes,
    att.sortable.attributes,
    empty
  }
listPerson =
  
  ## (liste de personnes) contient une liste d'éléments, chacun d'entre eux apportant des informations sur une personne précise ou sur un groupe de personnes, par exemple les participants à une interaction linguistique, ou les personnes citées dans une source historique. [13.3.2. The Person Element 15.2. Contextual Information 2.4. The Profile Description 15.3.2. Declarable Elements]
  element listPerson {
    (model.headLike*,
     (model.personLike | listPerson)+,
     (relation | listRelation)*),
    att.global.attributes,
    att.typed.attributes,
    att.declarable.attributes,
    att.sortable.attributes,
    empty
  }
listPlace =
  
  ## (liste de lieux) contient une liste de lieux, qui peut être suivie d'une liste de relations définies entre les lieux (autres que la relation d'inclusion). [2.2.7. The Source Description 13.3.4. Places]
  element listPlace {
    (model.headLike*,
     (model.placeLike | listPlace)+,
     (relation | listRelation)*),
    att.global.attributes,
    att.typed.attributes,
    att.declarable.attributes,
    att.sortable.attributes,
    empty
  }
location =
  
  ## (localisation) définit l'emplacement d'un lieu par des coordonnées géographiques, en termes d'entités nommées dites géopolitiques, ou par une adresse. [13.3.4. Places]
  element location {
    (model.labelLike
     | model.placeNamePart
     | model.offsetLike
     | model.measureLike
     | model.addressLike
     | model.noteLike
     | model.biblLike)*,
    att.global.attributes,
    att.typed.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    empty
  }
nationality =
  
  ## (nationalité) contient une description non formalisée de la nationalité ou citoyenneté présente ou passée d'une personne. [15.2.2. The Participant Description]
  element nationality {
    macro.phraseSeq,
    att.global.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    att.naming.attributes,
    empty
  }
occupation =
  
  ## (activité) contient une description non formalisée de l'activité, de la profession ou de l'occupation d'une personne. [15.2.2. The Participant Description]
  element occupation {
    macro.phraseSeq,
    att.global.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    att.naming.attributes,
    
    ## identifie le système de classification ou la taxinomie utilisés, en fournissant l'identifiant d'un élément taxonomy déclaré ailleurs dans l'en-tête.
    attribute scheme { data.pointer }?,
    
    ## contient un code d'activité défini dans le système de classification ou dans la taxonomie déclaré dans l'attribut scheme.
    attribute code { data.pointer }?,
    empty
  }
org =
  
  ## (organisation) fournit des informations sur une organisation identifiable, telle qu'une entreprise, une tribu ou tout autre groupement de personnes. [13.2.2. Organizational Names]
  element org {
    (model.headLike*,
     (model.pLike*
      | (model.labelLike
         | model.nameLike
         | model.placeLike
         | model.orgPart
         | model.milestoneLike)*),
     (model.noteLike | model.biblLike | linkGrp | link)*,
     model.personLike*),
    att.global.attributes,
    att.typed.attributes,
    att.editLike.attributes,
    att.sortable.attributes,
    
    ## spécifie le rôle principal ou la catégorie d'une organisation.
    attribute role {
      list { data.word+ }
    }?,
    empty
  }
listRelation =
  
  ## donne des informations sur les relations qui existent entre des personnes, des lieux, ou des organisations, soit de manière informelle en prose, soit de manière formelle. [13.3.2.3. Personal Relationships]
  element listRelation {
    (model.headLike*,
     (model.pLike | (relation | listRelation)+)),
    att.global.attributes,
    att.typed.attributes,
    att.sortable.attributes,
    empty
  }
person =
  
  ## (personne) fournit des informations sur un individu identifiable, par exemple un participant à une interaction linguistique, ou une personne citée dans une source historique. [13.3.2. The Person Element 15.2.2. The Participant Description]
  element person {
    (model.pLike+ | (model.personPart | model.global)*),
    att.global.attributes,
    att.editLike.attributes,
    att.sortable.attributes,
    
    ## précise un rôle principal ou une classification principale pour cette personne.
    attribute role {
      list { data.enumerated+ }
    }?,
    
    ## précise le sexe de la personne.
    attribute sex {
      list { data.sex+ }
    }?,
    
    ## précise une tranche d'âge pour la personne.
    attribute age { data.enumerated }?,
    empty
  }
personGrp =
  
  ## (groupe de personnes) décrit un groupe d'individus traité comme une personne unique à des fins d'analyse. [15.2.2. The Participant Description]
  element personGrp {
    (model.pLike+ | (model.personPart | model.global)*),
    att.global.attributes,
    att.sortable.attributes,
    
    ## précise le rôle joué par ce groupe de personnes dans l'interaction.
    attribute role { data.enumerated }?,
    
    ## précise le sexe du groupe participant.
    attribute sex {
      list { data.sex+ }
    }?,
    
    ## précise la tranche d'âge des participants.
    attribute age { data.enumerated }?,
    
    ## précise la taille exacte ou approximative du groupe.
    attribute size {
      list { data.word+ }
    }?,
    empty
  }
place =
  
  ## (lieu) contient des informations sur un lieu géographique. [13.3.4. Places]
  element place {
    (model.headLike*,
     (model.pLike*
      | (model.labelLike
         | model.placeStateLike
         | model.placeEventLike)*),
     (model.noteLike | model.biblLike | linkGrp | link)*,
     (model.placeLike | listPlace)*),
    att.global.attributes,
    att.typed.attributes,
    att.editLike.attributes,
    att.sortable.attributes,
    empty
  }
population =
  
  ## (population) contient des informations sur la population d'un lieu. [13.3.4.3. States, Traits, and Events]
  element population {
    (model.headLike*,
     ((model.pLike+ | model.labelLike+),
      (model.noteLike | model.biblLike)*)?,
     population*),
    att.global.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    att.naming.attributes,
    att.typed.attributes,
    empty
  }
relation =
  
  ## (relation) décrit tout type de relation ou de lien à l'intérieur d'un groupe donné de participants. [13.3.2.3. Personal Relationships]
  [
    sch:pattern [
      id = "tei_bare-relation-reforkeyorname-constraint-6"
      "\x{a}" ~
      "            "
      sch:rule [
        context = "tei:relation"
        "\x{a}" ~
        "               "
        sch:assert [
          test = "@ref or @key or @name"
          "One of the attributes  'name', 'ref' or 'key' must be supplied"
        ]
        "\x{a}" ~
        "            "
      ]
      "\x{a}" ~
      "         "
    ]
    sch:pattern [
      id = "tei_bare-relation-activemutual-constraint-6"
      "\x{a}" ~
      "            "
      sch:rule [
        context = "tei:relation"
        "\x{a}" ~
        "               "
        sch:report [
          test = "@active and @mutual"
          "Only one of the attributes\x{a}" ~
          "@active and @mutual may be supplied"
        ]
        "\x{a}" ~
        "            "
      ]
      "\x{a}" ~
      "         "
    ]
    sch:pattern [
      id = "tei_bare-relation-activepassive-constraint-7"
      "\x{a}" ~
      "            "
      sch:rule [
        context = "tei:relation"
        "\x{a}" ~
        "               "
        sch:report [
          test = "@passive and not(@active)"
          "the attribute 'passive'\x{a}" ~
          "	may be supplied only if the attribute 'active' is\x{a}" ~
          "	supplied"
        ]
        "\x{a}" ~
        "            "
      ]
      "\x{a}" ~
      "         "
    ]
  ]
  element relation {
    att.global.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    att.canonical.attributes,
    att.sortable.attributes,
    att.typed.attributes,
    
    ## fournit un nom pour le type de relation dont elle est une instance.
    attribute name { data.enumerated }?,
    (
     ## identifie les participants actifs dans une relation à sens unique, ou tous les participants dans une relation réciproque.
     attribute active {
       list { data.pointer+ }
     }?
     | 
       ## fournit une liste de participants entre lesquels la relation est réciproque.
       attribute mutual {
         list { data.pointer+ }
       }?),
    
    ## identifie les participants passifs dans une relation non mutuelle.
    attribute passive {
      list { data.pointer+ }
    }?,
    empty
  }
residence =
  
  ## (résidence) décrit les lieux de résidence présents ou passés d'une personne. [15.2.2. The Participant Description]
  element residence {
    macro.phraseSeq,
    att.global.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    att.naming.attributes,
    empty
  }
sex =
  
  ## (sexe) précise le sexe d'une personne. [13.3.2.1. Personal Characteristics]
  element sex {
    macro.phraseSeq,
    att.global.attributes,
    att.editLike.attributes,
    att.datable.attributes,
    
    ## supplies a coded value for sex
    attribute value {
      list { data.sex+ }
    }?,
    empty
  }
socecStatus =
  
  ## (statut socio-économique) contient une description non formalisée du statut social ou économique d'une personne. [15.2.2. The Participant Description]
  element socecStatus {
    macro.phraseSeq,
    att.global.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    att.naming.attributes,
    
    ## identifie le système de classification ou la taxinomie utilisés.
    attribute scheme { data.pointer }?,
    
    ## contient un code de statut existant dans le système de classification ou dans la taxonomie déclarés au moyen de l'attribut source.
    attribute code { data.pointer }?,
    empty
  }
state =
  
  ## (statut) contient la description d'un statut ou d'une qualité actuels attribués à une personne, un lieu ou une organisation. [13.3.1. Basic Principles 13.3.2.1. Personal Characteristics]
  element state {
    (state+
     | (model.headLike*,
        model.pLike+,
        (model.noteLike | model.biblLike)*)
     | (model.labelLike | model.noteLike | model.biblLike)*),
    att.global.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    att.typed.attributes,
    att.naming.attributes,
    empty
  }
terrain =
  
  ## (terrain) contient des informations sur le terrain physique d'un lieu. [13.3.4.3. States, Traits, and Events]
  element terrain {
    (model.headLike*,
     (model.pLike+ | model.labelLike+),
     (model.noteLike | model.biblLike)*,
     terrain*),
    att.global.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    att.naming.attributes,
    att.typed.attributes,
    empty
  }
trait =
  
  ## (trait distinctif) contient la description d'une caractéristique culturelle et en principe permanente, attribuée à une personne ou à un lieu. [13.3.1. Basic Principles 13.3.2.1. Personal Characteristics]
  element trait {
    (trait+
     | (model.headLike*,
        model.pLike+,
        (model.noteLike | model.biblLike)*)
     | (model.labelLike | model.noteLike | model.biblLike)*),
    att.global.attributes,
    att.datable.attributes,
    att.editLike.attributes,
    att.naming.attributes,
    att.typed.attributes,
    empty
  }
nym =
  
  ## (nom canonique) contient la définition de tout nom ou partie de nom dans leur forme canonique. [13.3.5. Names and Nyms]
  element nym {
    (model.entryPart*, model.pLike*, nym*),
    att.global.attributes,
    att.typed.attributes,
    att.sortable.attributes,
    
    ## pointe vers des éléments constituants canoniques.
    attribute parts {
      list { data.pointer+ }
    }?,
    empty
  }
listNym =
  
  ## (liste de noms canoniques) contient une liste de noms normalisés pour tous types d'objets. [13.3.5. Names and Nyms]
  element listNym {
    (model.headLike*, (nym | listNym)+, (relation | listRelation)*),
    att.global.attributes,
    att.typed.attributes,
    att.declarable.attributes,
    att.sortable.attributes,
    empty
  }
g =
  
  ## (caractère ou glyphe) représente un glyphe, ou un caractère non standard [5. Characters, Glyphs, and Writing Modes]
  element g {
    text,
    att.global.attributes,
    att.typed.attributes,
    
    ## pointe vers la description du caractère ou du glyphe visé
    attribute ref { data.pointer }?,
    empty
  }
char =
  
  ## (caractère) fournit des informations descriptives sur un caractère [5.2. Markup Constructs for Representation of Characters and Glyphs]
  element char {
    (charName?,
     model.descLike*,
     charProp*,
     mapping*,
     model.graphicLike*,
     model.noteLike*),
    att.global.attributes,
    empty
  }
charName =
  
  ## (nom de caractère) contient le nom d'un caractère exprimé selon les conventions de l'Unicode [5.2. Markup Constructs for Representation of Characters and Glyphs]
  element charName { text, att.global.attributes, empty }
charProp =
  
  ## (propriété d'un caractère) fournit un nom et une valeur pour une propriété quelconque d'un caractère ou d'un glyphe défini dans l'élément parent [5.2. Markup Constructs for Representation of Characters and Glyphs]
  element charProp {
    ((unicodeName | localName), value),
    att.global.attributes,
    att.typed.attributes,
    empty
  }
glyph =
  
  ## (glyphe d'un caractère) fournit des informations descriptives sur un glyphe [5.2. Markup Constructs for Representation of Characters and Glyphs]
  element glyph {
    (glyphName?,
     model.descLike*,
     charProp*,
     mapping*,
     model.graphicLike*,
     model.noteLike*),
    att.global.attributes,
    empty
  }
glyphName =
  
  ## (nom du glyphe d'un caractère) contient le nom d'un glyphe, exprimé selon les conventions de l'Unicode pour les noms de caractère [5.2. Markup Constructs for Representation of Characters and Glyphs]
  element glyphName { text, att.global.attributes, empty }
localName =
  
  ## (nom de propriété défini localement) contient un nom défini localement pour une propriété [5.2.1. Character Properties]
  element localName { text, att.global.attributes, empty }
mapping =
  
  ## (caractères associés) contient un ou plusieurs caractères reliés par certains aspects (spécifiés par l'attribut type) au glyphe ou au caractère défini dans l'élément parent [5.2. Markup Constructs for Representation of Characters and Glyphs]
  element mapping {
    macro.xtext, att.global.attributes, att.typed.attributes, empty
  }
unicodeName =
  
  ## (nom de propriété Unicode) contient le nom d'une propriété normative ou informative enregistré en Unicode [5.2.1. Character Properties]
  element unicodeName {
    text,
    att.global.attributes,
    
    ## spécifie le numéro de version de la norme Unicode où se trouve défini ce nom de propriété
    attribute version { data.version }?,
    empty
  }
value =
  
  ## (valeur) contient une valeur unique pour une propriété, pour un attribut ou pour tout autre élément d'analyse [5.2.1. Character Properties]
  element value { macro.xtext, att.global.attributes, empty }
att.global.linking.attributes =
  att.global.linking.attribute.corresp,
  att.global.linking.attribute.synch,
  att.global.linking.attribute.sameAs,
  att.global.linking.attribute.copyOf,
  att.global.linking.attribute.next,
  att.global.linking.attribute.prev,
  att.global.linking.attribute.exclude,
  att.global.linking.attribute.select
att.global.linking.attribute.corresp =
  
  ## (correspond) pointe vers des éléments qui ont une correspondance avec l'élément en question.
  attribute corresp {
    list { data.pointer+ }
  }?
att.global.linking.attribute.synch =
  
  ## (synchrone) pointe vers des éléments qui sont synchrones avec l'élément en question.
  attribute synch {
    list { data.pointer+ }
  }?
att.global.linking.attribute.sameAs =
  
  ## pointe vers un élément identique à l'élément en question.
  attribute sameAs { data.pointer }?
att.global.linking.attribute.copyOf =
  
  ## pointe vers un élément dont l'élément en question est une copie.
  attribute copyOf { data.pointer }?
att.global.linking.attribute.next =
  
  ## pointe vers l'élément suivant d'un ensemble virtuel dont l'élément en question est une partie.
  attribute next { data.pointer }?
att.global.linking.attribute.prev =
  
  ## ( précédent) pointe vers l'élément précédent d'un ensemble virtuel auquel appartient l'élément en question.
  attribute prev { data.pointer }?
att.global.linking.attribute.exclude =
  
  ## pointe vers des éléments qui sont une alternative exclusive à l'élément en question.
  attribute exclude {
    list { data.pointer+ }
  }?
att.global.linking.attribute.select =
  
  ## sélectionne une ou plusieurs valeurs alternatives ; si une seule valeur est sélectionnée, l'ambiguïté ou l'incertitude est marquée comme résolue. Si plus d'une valeur alternative est sélectionnée, le degré d'ambiguïté ou d'incertitude est marqué comme réduit par le nombre de valeurs alternatives non sélectionnées.
  attribute select {
    list { data.pointer+ }
  }?
link =
  
  ## ( lien) définit une association ou un lien hypertextuel entre des éléments ou des passages, lien dont le type ne peut être spécifié précisément par d'autres éléments. [16.1. Links]
  element link {
    empty
    >> sch:pattern [
         id = "tei_bare-link-linkTargets3-constraint-7"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:link"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "contains(normalize-space(@target),' ')"
             "You must supply at least two values for @target or  on "
             sch:name [ ]
             "\x{a}" ~
             "               "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attributes,
    att.pointing.attributes,
    att.typed.attributes,
    empty
  }
linkGrp =
  
  ## (groupe de liens) définit un ensemble d'associations ou de liens hypertextuels. [16.1. Links]
  element linkGrp {
    (link)+, att.global.attributes, att.pointing.group.attributes, empty
  }
ab =
  
  ## (bloc anonyme) contient une unité de texte quelconque, de niveau "composant", faisant office de contenant anonyme pour une expression ou des éléments de niveau intermédiaire, analogue à un paragraphe mais sans sa portée sémantique. [16.3. Blocks, Segments, and Anchors]
  element ab {
    macro.paraContent,
    att.global.attributes,
    att.typed.attributes,
    empty
  }
anchor =
  
  ## (point d'ancrage) attache un identifiant à un point du texte, que ce point corresponde ou non à un élément textuel. [8.4.2. Synchronization and Overlap 16.4. Correspondence and Alignment]
  element anchor {
    empty, att.global.attributes, att.typed.attributes, empty
  }
seg =
  
  ## (segment quelconque) contient une unité de texte quelconque de niveau segment. [16.3. Blocks, Segments, and Anchors 6.2. Components of the Verse Line 7.2.5. Speech Contents]
  element seg {
    macro.paraContent,
    att.global.attributes,
    att.segLike.attributes,
    att.typed.attributes,
    att.source.attributes,
    empty
  }
when =
  
  ## indique un point dans le temps, soit relatif à d'autres éléments de l'élément timeline dans lequel il est contenu, soit dans l'absolu. [16.5.2. Placing Synchronous Events in Time]
  element when {
    empty,
    att.global.attributes,
    
    ## contient une valeur temporelle absolue.
    attribute absolute { data.temporal.w3c }?,
    
    ## spécifie l'unité de temps dans laquelle la valeur de l'attribut interval est exprimée, si elle n'est pas héritée de l'élément parent timeLine.
    ## Les valeurs suggérées comprennent: 1] d(days) ; 2] h(hours) ; 3] min(minutes) ; 4] s(seconds) ; 5] ms(milliseconds) 
    attribute unit {
      
      ## (jours) 
      "d"
      | 
        ## (heures) 
        "h"
      | 
        ## (minutes) 
        "min"
      | 
        ## (secondes) 
        "s"
      | 
        ## (millisecondes) 
        "ms"
      | xsd:Name
    }?,
    
    ## spécifie la partie numérique d'un intervalle de temps.
    attribute interval { data.interval }?,
    
    ## identifie le point de référence pour déterminer la date ou l'heure de l'élément courant when : cette date ou cette heure s'obtiennent en ajoutant la valeur de l'intervalle à la date du point de référence.
    attribute since { data.pointer }?,
    empty
  }
timeline =
  
  ## (frise chronologique) fournit un ensemble de points ordonnés dans le temps qui peuvent être liés à des éléments de la parole transcrite pour créer un alignement temporel de ce texte. [16.5.2. Placing Synchronous Events in Time]
  element timeline {
    when+,
    att.global.attributes,
    
    ## désigne le début de la frise chronologique, c'est-à-dire le moment où elle commence.
    attribute origin { data.pointer }?,
    
    ## spécifie l'unité de temps correspondant à la valeur de l'attribut interval de la frise chronologique ou des points temporels qui la constituent.
    ## Les valeurs suggérées comprennent: 1] d(days) ; 2] h(hours) ; 3] min(minutes) ; 4] s(seconds) ; 5] ms(milliseconds) 
    attribute unit {
      
      ## (jours) 
      "d"
      | 
        ## (heures) 
        "h"
      | 
        ## (minutes) 
        "min"
      | 
        ## (secondes) 
        "s"
      | 
        ## (millisecondes) 
        "ms"
      | xsd:Name
    }?,
    
    ## spécifie la partie numérique d'un intervalle de temps.
    attribute interval { data.interval }?,
    empty
  }
join =
  
  ## (jointure) identifie un segment de texte, qui peut être fragmenté, en pointant vers les éléments éventuellement dispersés qui le composent. [16.7. Aggregation]
  element join {
    ((model.descLike | model.certLike)*)
    >> sch:pattern [
         id = "tei_bare-join-joinTargets3-constraint-8"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:join"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "contains(@target,' ')"
             "\x{a}" ~
             "You must supply at least two values for @target on "
             sch:name [ ]
             "\x{a}" ~
             "               "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attributes,
    att.pointing.attributes,
    att.typed.attributes,
    
    ## spécifie le nom de l'élément que cette agrégation est censée former.
    attribute result { data.name }?,
    
    ## indique si les cibles à réunir incluent l'intégralité de l'élément indiqué (le sous-arbre entier y compris sa racine) ou seulement les enfants de la cible (les branches du sous-arbre).
    [ a:defaultValue = "root" ]
    attribute scope {
      
      ## les sous-arbres dotés de leur racine qui sont désignés par l'attribut target sont joints ; chaque sous-arbre devient un fils de l'élément virtuel créé par la jointure.
      "root"
      | 
        ## les fils des sous-arbres désignés par l'attribut target deviennent les fils de l'élément virtuel (c'est-à-dire que les racines des sous-arbres disparaissent).
        "branches"
    }?,
    empty
  }
joinGrp =
  
  ## (groupe de jointures) regroupe une collection d'éléments join ainsi que, éventuellement, des pointeurs. [16.7. Aggregation]
  element joinGrp {
    (model.glossLike*, (join)+),
    att.global.attributes,
    att.pointing.group.attributes,
    
    ## décrit le résultat produit par le rassemblement dans cette collection des éléments join.
    attribute result { data.name }?,
    empty
  }
alt =
  
  ## (alternative) identifie une alternative ou un ensemble d'options entre des éléments ou des passages. [16.8. Alternation]
  element alt {
    empty,
    att.global.attributes,
    att.pointing.attribute.targetLang,
    att.pointing.attribute.evaluate,
    att.typed.attributes,
    
    ## précise la cible de la référence en donnant une ou plusieurs références URI
    attribute target {
      list { data.pointer, data.pointer, data.pointer* }
    }?,
    
    ## établit si les alternatives rassemblées dans cette collection sont exclusives ou non.
    attribute mode {
      
      ## (exclusif) indique que l'alternative est exclusive, c'est-à-dire, qu'une seule des options proposées est possible.
      "excl"
      | 
        ## (non exclusif) Indique que cette alternative n'est pas exclusive, c'est-à-dire qu'une option au moins est vraie.
        "incl"
    }?,
    
    ## Si l'attribut mode a la valeur , chacune des valeurs de l'attribut weights établit la probabilité que l'option correspondante soit vraie. Si l'attribut mode a la valeur , chacune des valeurs de l'attribut weights établit la probabilité que l'option correspondante soit vraie, étant posé qu'au moins une des autres options l'est aussi.
    attribute weights {
      list { data.probability, data.probability, data.probability* }
    }?,
    empty
  }
altGrp =
  
  ## (groupe d'alternatives) regroupe une collection d'éléments alt et, éventuellement, de pointeurs. [16.8. Alternation]
  element altGrp {
    (alt)*,
    att.global.attributes,
    att.pointing.group.attributes,
    
    ## établit si les alternatives rassemblées dans cette collection sont exclusives ou non.
    [ a:defaultValue = "excl" ]
    attribute mode {
      
      ## (exclusif) indique que l'alternative est exclusive, c'est-à-dire qu'une seule des alternatives proposées est possible.
      "excl"
      | 
        ## (non exclusif) indique que l'alternative n'est pas exclusive, c'est-à-dire qu'une alternative au moins est vraie.
        "incl"
    }?,
    empty
  }
model.rdgLike = rdg
model.rdgPart = wit | witStart | witEnd | lacunaStart | lacunaEnd
att.rdgPart.attributes = att.rdgPart.attribute.wit
att.rdgPart.attribute.wit =
  
  ## (témoin ou témoins) contient une liste d'une ou plusieurs abréviations désignant les témoins qui commencent ou finissent à ce point.
  attribute wit {
    list { data.pointer+ }
  }?
att.witnessed.attributes = att.witnessed.attribute.wit
att.witnessed.attribute.wit =
  
  ## (témoin ou témoins) contient une liste comprenant un ou plusieurs pointeurs qui désignent les témoins attestant d'une leçon donnée.
  attribute wit {
    list { data.pointer+ }
  }?
att.textCritical.attributes =
  att.source.attributes,
  att.textCritical.attribute.type,
  att.textCritical.attribute.cause,
  att.textCritical.attribute.varSeq,
  att.textCritical.attribute.hand
att.textCritical.attribute.type =
  
  ## établit une classification de la leçon selon une typologie utile.
  ## Exemple de valeurs possibles: 1] substantive; 2] orthographic
  attribute type { data.enumerated }?
att.textCritical.attribute.cause =
  
  ## établit une classification de la cause d'une variante de leçon, selon une typologie appropriée aux origines possibles de cette variation.
  ## Exemple de valeurs possibles: 1] homeoteleuton; 2] homeoarchy; 3] paleographicConfusion; 4] haplography; 5] dittography; 6] falseEmendation
  attribute cause { data.enumerated }?
att.textCritical.attribute.varSeq =
  
  ## (position de la variante dans une séquence) fournit un nombre indiquant la position de la leçon dans une séquence, lorsqu'on peut supposer un ordre pour les variantes de chaque lemme.
  attribute varSeq { data.count }?
att.textCritical.attribute.hand =
  
  ## désigne la main responsable d'une leçon particulière dans le témoin.
  attribute hand { data.pointer }?
app =
  
  ## (entrée d'apparat critique) contient une entrée dans un apparat critique, constituée d'un lemme facultatif et d'au moins une leçon. [12.1.1. The Apparatus Entry]
  element app {
    (model.global*,
     (lem, model.global*, (wit, model.global*)?)?,
     ((model.rdgLike, model.global*, (wit, model.global*)?)
      | (rdgGrp, model.global*, (wit, model.global*)?))*),
    att.global.attributes,
    
    ## classifie la variation contenue dans cet élément selon toute typologie adéquate.
    attribute type { data.enumerated }?,
    
    ## identifie, si nécessaire, le début du lemme dans le texte de base.
    attribute from { data.pointer }?,
    
    ## identifie, si nécessaire, la fin du lemme dans le texte de base.
    attribute to { data.pointer }?,
    
    ## (emplacement) indique la localisation de la variante lorsqu'on utilise dans l'encodage de l'apparat critique une méthode de référencement des localisations.
    attribute loc {
      list { data.word+ }
    }?,
    empty
  }
listApp =
  
  ## (liste d'entrées dans un apparat critique) contient une liste d'entrées dans un apparat critique. [12.2. Linking the Apparatus to the Text]
  element listApp {
    (model.headLike*, (app | listApp)+),
    att.global.attributes,
    att.sortable.attributes,
    att.declarable.attributes,
    att.typed.attributes,
    empty
  }
lem =
  
  ## (lemme) contient le lemme ou le texte de base d'une variante textuelle [12.1. The Apparatus Entry, Readings, and Witnesses]
  element lem {
    (text
     | model.gLike
     | model.phrase
     | model.inter
     | model.global
     | model.rdgPart)*,
    att.global.attributes,
    att.textCritical.attributes,
    att.witnessed.attributes,
    empty
  }
rdg =
  
  ## (leçon) contient une leçon à l'intérieur d'une variante du texte. [12.1. The Apparatus Entry, Readings, and Witnesses]
  element rdg {
    (text
     | model.gLike
     | model.phrase
     | model.inter
     | model.global
     | model.rdgPart)*,
    att.global.attributes,
    att.textCritical.attributes,
    att.witnessed.attributes,
    empty
  }
rdgGrp =
  
  ## (groupe de leçons) regroupe deux leçons ou plus qui sont perçues comme ayant une relation génétique ou une autre affinité. [12.1. The Apparatus Entry, Readings, and Witnesses]
  element rdgGrp {
    (((rdgGrp, wit?)
      | ((lem, wit?)?, (model.rdgLike, wit?))*)+)
    >> sch:pattern [
         id = "tei_bare-rdgGrp-only1lem-constraint-9"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:rdgGrp"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "count(tei:lem) < 2"
             "Only one <lem> element may appear within a <rdgGrp>"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attributes,
    att.textCritical.attributes,
    empty
  }
witDetail =
  
  ## (informations détaillées sur le témoin) donne des renseignements supplémentaires sur un témoin particulier ou sur des témoins, pour une leçon particulière. [12.1. The Apparatus Entry, Readings, and Witnesses]
  element witDetail {
    macro.phraseSeq,
    att.global.attributes,
    att.placement.attributes,
    att.source.attributes,
    att.pointing.attributes,
    
    ## (témoins) contient le ou les code(s) identifiant le ou le(s) témoin(s) auxquels fait référence l'élément witDetail.
    attribute wit {
      list { data.pointer+ }
    },
    
    ## décrit le type de renseignement donné sur le témoin.
    attribute type { data.enumerated }?,
    empty
  }
wit =
  
  ## (témoin) contient une liste d'une ou plusieurs abréviation(s) désignant des témoins attestant d'une leçon donnée, pour une version du texte. [12.1.4. Witness Information]
  element wit {
    macro.phraseSeq,
    att.global.attributes,
    att.rdgPart.attributes,
    empty
  }
listWit =
  
  ## (liste de témoins) donne une liste de définitions pour tous les témoignages cités dans un apparat critique, pouvant être groupées de façon hiérarchique. [12.1. The Apparatus Entry, Readings, and Witnesses]
  element listWit {
    (model.headLike?, (witness | listWit)+),
    att.global.attributes,
    att.sortable.attributes,
    empty
  }
witness =
  
  ## (témoin) contient soit la description d'un seul témoin auquel il est fait référence à l'intérieur de l'apparat critique, soit une liste de témoins, à laquelle on doit faire référence par une seule abréviation [12.1. The Apparatus Entry, Readings, and Witnesses]
  element witness {
    macro.limitedContent,
    att.global.attributes,
    att.sortable.attributes,
    empty
  }
witStart =
  
  ## (début d'un témoin fragmentaire) indique le début, ou la reprise du texte, d'un témoin fragmentaire [12.1.5. Fragmentary Witnesses]
  element witStart {
    empty, att.global.attributes, att.rdgPart.attributes, empty
  }
witEnd =
  
  ## (fin d'un témoin fragmentaire) indique la fin ou l'arrêt du texte d'un témoin fragmentaire [12.1.5. Fragmentary Witnesses]
  element witEnd {
    empty, att.global.attributes, att.rdgPart.attributes, empty
  }
lacunaStart =
  
  ## (début d'une lacune) indique le début d'une lacune dans le texte d'un témoin textuel quasiment complet. [12.1.5. Fragmentary Witnesses]
  element lacunaStart {
    empty, att.global.attributes, att.rdgPart.attributes, empty
  }
lacunaEnd =
  
  ## (fin d'une lacune) indique la fin d'une lacune dans le texte d'un témoin textuel quasiment complet [12.1.5. Fragmentary Witnesses]
  element lacunaEnd {
    empty, att.global.attributes, att.rdgPart.attributes, empty
  }
att.global.facs.attributes = att.global.facs.attribute.facs
att.global.facs.attribute.facs =
  
  ## (fac-similé) pointe directement vers une image ou vers une partie d'une image correspondant au contenu de l'élément.
  attribute facs {
    list { data.pointer+ }
  }?
att.global.change.attributes = att.global.change.attribute.change
att.global.change.attribute.change =
  
  ## points to one or more change elements documenting a state or revision campaign to which the element bearing this attribute and its children have been assigned by the encoder.
  attribute change {
    list { data.pointer+ }
  }?
att.coordinated.attributes =
  att.coordinated.attribute.start,
  att.coordinated.attribute.ulx,
  att.coordinated.attribute.uly,
  att.coordinated.attribute.lrx,
  att.coordinated.attribute.lry,
  att.coordinated.attribute.points
att.coordinated.attribute.start =
  
  ## désigne l'élément qui, dans la transcription du texte, contient au moins le début de la section de texte représentée dans la zone ou surface.
  attribute start { data.pointer }?
att.coordinated.attribute.ulx =
  
  ## donne la valeur x de l'abscisse du coin supérieur gauche d'un rectangle.
  attribute ulx { data.numeric }?
att.coordinated.attribute.uly =
  
  ## donne la valeur y de l'ordonnée du coin supérieur gauche d'un rectangle.
  attribute uly { data.numeric }?
att.coordinated.attribute.lrx =
  
  ## donne la valeur x de l'abscisse du coin inférieur droit d'un rectangle.
  attribute lrx { data.numeric }?
att.coordinated.attribute.lry =
  
  ## donne la valeur y de l'ordonnée du coin inférieur droit d'un rectangle.
  attribute lry { data.numeric }?
att.coordinated.attribute.points =
  
  ## identifies a two dimensional area within the bounding box specified by the other attributes by means of a series of pairs of numbers, each of which gives the x,y coordinates of a point on a line enclosing the area.
  attribute points {
    list { data.point, data.point, data.point, data.point* }
  }?
facsimile =
  
  ## contient une représentation d'une source écrite quelconque sous la forme d'un ensemble d'images plutôt que sous la forme d'un texte transcrit ou encodé. [11.1. Digital Facsimiles]
  element facsimile {
    (front?, (model.graphicLike | surface | surfaceGrp)+, back?),
    att.global.attributes,
    empty
  }
sourceDoc =
  
  ## contains a transcription or other representation of a single source document potentially forming part of a dossier génétique or collection of sources. [11.1. Digital Facsimiles 11.2.2. Embedded Transcription]
  element sourceDoc {
    (model.global | model.graphicLike | surface | surfaceGrp)+,
    att.global.attributes,
    empty
  }
surface =
  
  ## définit une surface écrite comme un rectangle décrit par ses coordonnées spatiales, en regroupant éventuellement une ou plusieurs représentations graphiques de cet espace et des zones rectangulaires intéressantes à l'intérieur de celui-ci. [11.1. Digital Facsimiles 11.2.2. Embedded Transcription]
  element surface {
    ((model.global | model.labelLike | model.graphicLike)*,
     ((zone | line | surface | surfaceGrp), model.global*)*),
    att.global.attributes,
    att.coordinated.attributes,
    att.typed.attributes,
    
    ## describes the method by which this surface is or was connected to the main surface
    ## Exemple de valeurs possibles: 1] glued; 2] pinned; 3] sewn
    attribute attachment { data.enumerated }?,
    
    ## indicates whether the surface is attached and folded in such a way as to provide two writing surfaces
    attribute flipping { data.truthValue }?,
    empty
  }
surfaceGrp =
  
  ## defines any kind of useful grouping of written surfaces, for example the recto and verso of a single leaf, which the encoder wishes to treat as a single unit. [11.1. Digital Facsimiles]
  element surfaceGrp {
    (model.global | surface | surfaceGrp)+,
    att.global.attributes,
    att.typed.attributes,
    empty
  }
zone =
  
  ## définit une zone rectangulaire contenue dans un élément surface. [11.1. Digital Facsimiles 11.2.2. Embedded Transcription]
  element zone {
    (text
     | model.graphicLike
     | model.global
     | surface
     | model.linePart)*,
    att.global.attributes,
    att.coordinated.attributes,
    att.typed.attributes,
    
    ## indicates the amount by which this zone has been rotated clockwise, with respect to the normal orientation of the parent surface element as implied by the dimensions given in the msDesc element or by the coordinates of the surface itself. The orientation is expressed in arc degrees.
    [ a:defaultValue = "0" ] attribute rotate { data.count }?,
    empty
  }
addSpan =
  
  ## (partie de texte ajoutée) marque le début d'une longue partie de texte ajoutée par un auteur, un copiste, un annotateur ou un correcteur (voir aussi add). [11.3.1.4. Additions and Deletions]
  element addSpan {
    empty
    >> sch:pattern [
         id = "tei_bare-addSpan-spanTo-constraint-11"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:addSpan"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "@spanTo"
             "The @spanTo attribute of "
             sch:name [ ]
             " is required."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id = "tei_bare-addSpan-spanTo_fr-constraint-12"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:addSpan"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "@spanTo"
             "L'attribut spanTo est requis."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attributes,
    att.transcriptional.attributes,
    att.placement.attributes,
    att.typed.attributes,
    att.spanning.attributes,
    empty
  }
damage =
  
  ## (dommage) sert à encoder une zone qui a subi des dommages dans le manuscrit témoin du texte. [11.3.3.1. Damage, Illegibility, and Supplied Text]
  element damage {
    macro.paraContent,
    att.global.attributes,
    att.typed.attributes,
    att.damaged.attributes,
    empty
  }
damageSpan =
  
  ## (partie de texte endommagée) marque le début d'une longue partie de texte, endommagée d'une manière quelconque mais toujours lisible. [11.3.3.1. Damage, Illegibility, and Supplied Text]
  element damageSpan {
    empty
    >> sch:pattern [
         id = "tei_bare-damageSpan-spanTo-constraint-13"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:damageSpan"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "@spanTo"
             "\x{a}" ~
             "The @spanTo attribute of "
             sch:name [ ]
             " is required."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id = "tei_bare-damageSpan-spanTo_fr-constraint-14"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:damageSpan"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "@spanTo"
             "L'attribut spanTo est requis."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attributes,
    att.damaged.attributes,
    att.typed.attributes,
    att.spanning.attributes,
    empty
  }
delSpan =
  
  ## (partie de texte supprimée) marque le début d'une longue partie de texte supprimée, signalée comme supprimée ou bien signalée comme superflue ou fausse par un auteur, un copiste, un annotateur ou un correcteur. [11.3.1.4. Additions and Deletions]
  element delSpan {
    empty
    >> sch:pattern [
         id = "tei_bare-delSpan-spanTo-constraint-15"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:delSpan"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "@spanTo"
             "The @spanTo attribute of "
             sch:name [ ]
             " is required."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
    >> sch:pattern [
         id = "tei_bare-delSpan-spanTo_fr-constraint-16"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:delSpan"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "@spanTo"
             "L'attribut spanTo est requis."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attributes,
    att.transcriptional.attributes,
    att.typed.attributes,
    att.spanning.attributes,
    empty
  }
ex =
  
  ## (développement éditorial) contient une succession de lettres ajoutées par un éditeur ou un transcripteur pour développer une abréviation. [11.3.1.2. Abbreviation and Expansion]
  element ex {
    macro.xtext, att.global.attributes, att.editLike.attributes, empty
  }
fw =
  
  ## (élément de mise en page) permet d'encoder un titre courant (en haut ou en bas de la page), une réclame ou une autre information comparable, qui apparaît sur la page courante. [11.6. Headers, Footers, and Similar Matter]
  element fw {
    macro.phraseSeq,
    att.global.attributes,
    att.placement.attributes,
    
    ## caractérise l'information encodée conformément à une typologie appropriée.
    ## Exemple de valeurs possibles: 1] header; 2] footer; 3] pageNum(page number) ; 4] lineNum(line number) ; 5] sig(signature) ; 6] catch(catchword) 
    attribute type { data.enumerated }?,
    empty
  }
handShift =
  
  ## (reprise de main) marque le début d'une section du texte écrite par une nouvelle main ou le début d'une nouvelle séance d'écriture. [11.3.2.1. Document Hands]
  element handShift {
    empty,
    att.global.attributes,
    att.handFeatures.attributes,
    att.source.attributes,
    
    ## donne l'identifiant de la nouvelle main.
    attribute new { data.pointer }?,
    empty
  }
am =
  
  ## (marqueur d'abréviation) contient une succession de lettres ou de signes présents dans une abréviation mais omis ou remplacés dans la forme développée de l'abréviation [11.3.1.2. Abbreviation and Expansion]
  element am {
    (text | model.gLike | model.pPart.transcriptional)*,
    att.global.attributes,
    att.typed.attributes,
    att.editLike.attributes,
    empty
  }
restore =
  
  ## (rétablissement) indique le rétablissement d'un état antérieur du texte par suppression d'une marque ou d'une instruction de l'éditeur ou de l'auteur. [11.3.1.6. Cancellation of Deletions and Other Markings]
  element restore {
    macro.paraContent,
    att.global.attributes,
    att.transcriptional.attributes,
    att.typed.attributes,
    empty
  }
space =
  
  ## (espace) permet de situer un espace significatif dans le texte édité. [11.5.1. Space]
  element space {
    (model.descLike | model.certLike)*,
    att.global.attribute.rend,
    att.global.attribute.xmlid,
    att.global.attribute.n,
    att.global.attribute.xmllang,
    att.global.rendition.attribute.rend,
    att.global.rendition.attribute.style,
    att.global.rendition.attribute.rendition,
    att.global.linking.attribute.corresp,
    att.global.linking.attribute.synch,
    att.global.linking.attribute.sameAs,
    att.global.linking.attribute.copyOf,
    att.global.linking.attribute.next,
    att.global.linking.attribute.prev,
    att.global.linking.attribute.exclude,
    att.global.linking.attribute.select,
    att.global.facs.attribute.facs,
    att.global.change.attribute.change,
    att.global.responsibility.attribute.cert,
    att.typed.attributes,
    att.dimensions.attributes,
    att.source.attributes,
    
    ## (responsable) (responsible party) indicates the individual responsible for identifying and measuring the space
    attribute resp {
      list { data.pointer+ }
    }?,
    
    ## (dimension) indique si l'espace est vertical ou horizontal.
    attribute dim {
      
      ## l'espace est horizontal.
      "horizontal"
      | 
        ## l'espace est vertical.
        "vertical"
    }?,
    empty
  }
subst =
  
  ## ( substitution) regroupe une ou plusieurs parties de texte supprimées et une ou plusieurs parties de texte ajoutées, lorsque cette combinaison peut être considérée comme une intervention unique sur le texte. [11.3.1.5. Substitutions]
  element subst {
    ((model.milestoneLike)+)
    >> sch:pattern [
         id = "tei_bare-subst-substContents1-constraint-17"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:subst"
           "\x{a}" ~
           "               "
           sch:assert [
             test = "child::tei:add and child::tei:del"
             "\x{a}" ~
             "                  "
             sch:name [ ]
             " must have at least one child add and at least one child del"
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    att.global.attributes,
    att.transcriptional.attributes,
    empty
  }
substJoin =
  
  ## (jointure de substitution) identifies a series of possibly fragmented additions, deletions or other revisions on a manuscript that combine to make up a single intervention in the text [11.3.1.5. Substitutions]
  element substJoin {
    (model.descLike | model.certLike)*,
    att.global.attributes,
    att.pointing.attributes,
    att.transcriptional.attributes,
    empty
  }
supplied =
  
  ## (texte restitué) permet d'encoder du texte restitué par l'auteur de la transcription ou par l'éditeur pour une raison quelconque, le plus souvent parce que le texte du document original ne peut être lu, par suite de dommages matériels ou de lacunes. [11.3.3.1. Damage, Illegibility, and Supplied Text]
  element supplied {
    macro.paraContent,
    att.global.attributes,
    att.editLike.attributes,
    
    ## donne la raison pour laquelle on a dû restituer le texte.
    attribute reason {
      list { data.word+ }
    }?,
    empty
  }
surplus =
  
  ## (Texte superflu) permet d'encoder une partie de texte présente dans la source lorsque l'éditeur la considère superflue ou redondante. [11.3.3.1. Damage, Illegibility, and Supplied Text]
  element surplus {
    macro.paraContent,
    att.global.attributes,
    att.editLike.attributes,
    
    ## indique les raisons pour lesquelles on considère cette partie de texte comme superflue.
    attribute reason {
      list { data.word+ }
    }?,
    empty
  }
line =
  
  ## contains the transcription of a topographic line in the source document [11.2.2. Embedded Transcription]
  element line {
    (text | model.global | model.gLike | model.linePart)*,
    att.typed.attributes,
    att.global.attributes,
    att.coordinated.attributes,
    empty
  }
listTranspose =
  
  ## supplies a list of transpositions, each of which is indicated at some point in a document typically by means of metamarks. [11.3.4.5. Transpositions]
  element listTranspose { transpose+, att.global.attributes, empty }
metamark =
  
  ## contains or describes any kind of graphic or written signal within a document the function of which is to determine how it should be read rather than forming part of the actual content of the document. [11.3.4.2. Metamarks]
  element metamark {
    macro.specialPara,
    att.spanning.attributes,
    att.placement.attributes,
    att.global.attributes,
    
    ## describes the function (for example status, insertion, deletion, transposition) of the mark.
    attribute function { data.word }?,
    
    ## identifies one or more elements to which the function indicated by the metamark applies.
    attribute target {
      list { data.pointer+ }
    }?,
    empty
  }
mod =
  
  ## represents any kind of modification identified within a single document. [11.3.4.1. Generic Modification]
  element mod {
    macro.paraContent,
    att.global.attributes,
    att.transcriptional.attributes,
    att.typed.attributes,
    att.spanning.attributes,
    empty
  }
redo =
  
  ## indicates one or more cancelled interventions in a document which have subsequently been marked as reaffirmed or repeated. [11.3.4.4. Confirmation, Cancellation, and Reinstatement of Modifications]
  element redo {
    empty,
    att.global.attributes,
    att.spanning.attributes,
    att.transcriptional.attributes,
    
    ## points to one or more elements representing the interventions which are being reasserted.
    attribute target {
      list { data.pointer+ }
    }?,
    empty
  }
retrace =
  
  ## contains a sequence of writing which has been retraced, for example by over-inking, to clarify or fix it. [11.3.4.3. Fixation and Clarification]
  element retrace {
    macro.paraContent,
    att.global.attributes,
    att.spanning.attributes,
    att.transcriptional.attributes,
    empty
  }
transpose =
  
  ## describes a single textual transposition as an ordered list of at least two pointers specifying the order in which the elements indicated should be re-combined. [11.3.4.5. Transpositions]
  element transpose { empty, att.global.attributes, empty }
undo =
  
  ## indicates one or more marked-up interventions in a document which have subsequently been marked for cancellation. [11.3.4.4. Confirmation, Cancellation, and Reinstatement of Modifications]
  element undo {
    empty,
    att.global.attributes,
    att.spanning.attributes,
    att.transcriptional.attributes,
    
    ## points to one or more elements representing the interventions which are to be reverted or undone.
    attribute target {
      list { data.pointer+ }
    }?,
    empty
  }
start = TEI
